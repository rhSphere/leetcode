{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/CNAME","path":"CNAME","modified":0,"renderable":1},{"_id":"source/images/apple-touch-icon.png","path":"images/apple-touch-icon.png","modified":0,"renderable":0},{"_id":"source/images/favicon-16x16.png","path":"images/favicon-16x16.png","modified":0,"renderable":0},{"_id":"source/images/favicon-32x32.png","path":"images/favicon-32x32.png","modified":0,"renderable":0},{"_id":"source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"source/images/iget/improve-writing-skills-in-workplace.jpg","path":"images/iget/improve-writing-skills-in-workplace.jpg","modified":0,"renderable":0},{"_id":"source/images/weixin/erweima.svg","path":"images/weixin/erweima.svg","modified":0,"renderable":0},{"_id":"source/images/weixin/wechat.svg","path":"images/weixin/wechat.svg","modified":0,"renderable":0},{"_id":"source/images/JavaEE/SSM-Redis-framework.jpg","path":"images/JavaEE/SSM-Redis-framework.jpg","modified":0,"renderable":0},{"_id":"source/images/iget/kiss.jpg","path":"images/iget/kiss.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/clicklove.js","path":"js/src/clicklove.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/instantclick.min.js","path":"js/src/instantclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"source/images/JavaEE/SSM-Redis-architecture.png","path":"images/JavaEE/SSM-Redis-architecture.png","modified":0,"renderable":0},{"_id":"themes/next/source/images/background.jpg","path":"images/background.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/jaime-jasso-ny-paintover-final-2.jpg","path":"images/jaime-jasso-ny-paintover-final-2.jpg","modified":0,"renderable":1},{"_id":"source/images/background/andrii-shafetov.jpg","path":"images/background/andrii-shafetov.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"source/images/background/igor-kulkov-in-attic.jpg","path":"images/background/igor-kulkov-in-attic.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/images/olga-orlova-191a.jpg","path":"images/olga-orlova-191a.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"source/images/background/andrii-shafetov-03-npc-camp-empty.jpg","path":"images/background/andrii-shafetov-03-npc-camp-empty.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"source/uploads/avatar.png","path":"uploads/avatar.png","modified":0,"renderable":0},{"_id":"source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":0}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1547381165392},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1547381165392},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1547381165392},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1547381165395},{"_id":"themes/next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1547381165395},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1547381165395},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1547381165395},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1547381165396},{"_id":"themes/next/README.cn.md","hash":"23e92a2599725db2f8dbd524fbef2087c6d11c7b","modified":1547381165396},{"_id":"themes/next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1547381165396},{"_id":"themes/next/README.md","hash":"50abff86ffe4113051a409c1ed9261195d2aead0","modified":1547381165397},{"_id":"themes/next/bower.json","hash":"486ebd72068848c97def75f36b71cbec9bb359c5","modified":1547381165398},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1547381165398},{"_id":"themes/next/_config.yml","hash":"1b7169ff8ef38be5deccea48dbef662bf8abc76c","modified":1551954606679},{"_id":"themes/next/package.json","hash":"3963ad558a24c78a3fd4ef23cf5f73f421854627","modified":1547381165430},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1547381165393},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"a0a82dbfabdef9a9d7c17a08ceebfb4052d98d81","modified":1547381165393},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1547381165394},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1228506a940114288d61812bfe60c045a0abeac1","modified":1547381165393},{"_id":"themes/next/languages/de.yml","hash":"fd02d9c2035798d5dc7c1a96b4c3e24b05b31a47","modified":1547381165398},{"_id":"themes/next/languages/default.yml","hash":"b3bcd8934327448a43d9bfada5dd11b1b8c1402e","modified":1547381165399},{"_id":"themes/next/languages/fr-FR.yml","hash":"efeeb55d5c4add54ad59a612fc0630ee1300388c","modified":1547381165399},{"_id":"themes/next/languages/en.yml","hash":"2f4b4776ca1a08cc266a19afb0d1350a3926f42c","modified":1547381165399},{"_id":"themes/next/languages/id.yml","hash":"dccae33e2a5b3c9f11c0e05ec4a7201af1b25745","modified":1547381165399},{"_id":"themes/next/languages/it.yml","hash":"a215d016146b1bd92cef046042081cbe0c7f976f","modified":1547381165400},{"_id":"themes/next/languages/ja.yml","hash":"37f954e47a3bc669620ca559e3edb3b0072a4be5","modified":1547381165400},{"_id":"themes/next/languages/ko.yml","hash":"dc8f3e8c64eb7c4bb2385025b3006b8efec8b31d","modified":1547381165401},{"_id":"themes/next/languages/pt.yml","hash":"2efcd240c66ab1a122f061505ca0fb1e8819877b","modified":1547381165401},{"_id":"themes/next/languages/pt-BR.yml","hash":"568d494a1f37726a5375b11452a45c71c3e2852d","modified":1547381165401},{"_id":"themes/next/languages/nl-NL.yml","hash":"213e7a002b82fb265f69dabafbbc382cfd460030","modified":1547381165401},{"_id":"themes/next/languages/ru.yml","hash":"e33ee44e80f82e329900fc41eb0bb6823397a4d6","modified":1547381165402},{"_id":"themes/next/languages/vi.yml","hash":"a9b89ebd3e5933033d1386c7c56b66c44aca299a","modified":1547381165402},{"_id":"themes/next/languages/zh-Hans.yml","hash":"1cce183aff6c4da711b7abdcad3776b2d4fb7147","modified":1547456407034},{"_id":"themes/next/languages/zh-hk.yml","hash":"fe0d45807d015082049f05b54714988c244888da","modified":1547381165403},{"_id":"themes/next/languages/zh-tw.yml","hash":"432463b481e105073accda16c3e590e54c8e7b74","modified":1547381165403},{"_id":"themes/next/layout/_layout.swig","hash":"d00dd80bba050a8423ed3722932c5b6aa6333a1f","modified":1551954482239},{"_id":"themes/next/layout/archive.swig","hash":"f2b28e91991e624e874dcecaea1f804cf07babc6","modified":1547543191112},{"_id":"themes/next/layout/category.swig","hash":"dce6e24a64786df993db325a286ede5b8099b6fc","modified":1547526139111},{"_id":"themes/next/layout/index.swig","hash":"555a357ecf17128db4e29346c92bb6298e66547a","modified":1547381165429},{"_id":"themes/next/layout/page.swig","hash":"34d922f2e137c303a91f66f81a590489b1c002dc","modified":1547541424274},{"_id":"themes/next/layout/post.swig","hash":"7a6ce102ca82c3a80f776e555dddae1a9981e1ed","modified":1547381165430},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1547381165430},{"_id":"themes/next/layout/tag.swig","hash":"5314ff8ac04ef26801cea170a0e87fa50753e879","modified":1547526259309},{"_id":"themes/next/scripts/merge-configs.js","hash":"38d86aab4fc12fb741ae52099be475196b9db972","modified":1547381165431},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1547381165432},{"_id":"themes/next/source/CNAME","hash":"382c04da13dee9bb60a821390b0e94d96c645e0c","modified":1547509879560},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1547381165555},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1547381165555},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1547381165555},{"_id":"source/_posts/hello-world.md","hash":"029f91fccbe8f87c0f3ea10c4042300d2fa7edc0","modified":1551952675899},{"_id":"source/_posts/得到-怎样提升你的职场写作能力.md","hash":"87617e22aba9b8097f5590f68f9e05f99ae21396","modified":1551089710219},{"_id":"source/_posts/第一讲-先想后写——TCS三步构思法.md","hash":"3b46a1ae19206e843d92be29861412b44487a4b3","modified":1551278083935},{"_id":"source/_posts/认识SSM框架和Redis.md","hash":"7b047ebda1fcf44a24c6fb07a93359b77c74c5f4","modified":1551088972445},{"_id":"source/images/apple-touch-icon.png","hash":"bdda40e133d62b9cb439b8f1b178f2a8b62cf0cc","modified":1547434628555},{"_id":"source/images/favicon-16x16.png","hash":"8f0739ba20367f670d5f3c4041c9b5995ef32120","modified":1544617089424},{"_id":"source/images/favicon-32x32.png","hash":"63bf85ce06cc65a04af5562d99b53512b3ac382c","modified":1547434840658},{"_id":"source/images/favicon.ico","hash":"14a32315502fd54b186d2aa87342975dfab9edf3","modified":1547434851399},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547381165472},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1547381165404},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"5267f78dbdcc4c1643fa1301463ab7a59b5e2dbb","modified":1547464076272},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1547381165405},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"f83befdc740beb8dc88805efd7fbb0fef9ed19be","modified":1547381165405},{"_id":"themes/next/layout/_macro/post.swig","hash":"95cdc98c6357f1b21f7476e3b5e83acc68d57665","modified":1548598658084},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"4731c185f46fcef31620a0315eb574dc641fe0bc","modified":1547541819681},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1547381165407},{"_id":"themes/next/layout/_macro/reward.swig","hash":"357d86ec9586705bfbb2c40a8c7d247a407db21a","modified":1547381165406},{"_id":"themes/next/layout/_partials/chinese-zodiac.swig","hash":"1b18bdb66ab58517bb004d31f07df53629b42726","modified":1547543098913},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4adc65a602d1276615da3b887dcbf2ac68e7382b","modified":1547381165407},{"_id":"themes/next/layout/_partials/footer.swig","hash":"3987d857fca69d5dc0968e54d1f1b8047f0e804d","modified":1547539248367},{"_id":"themes/next/layout/_partials/head.swig","hash":"4d54e49bedcfb0dddfebb539e818b3799b17f574","modified":1547451141609},{"_id":"themes/next/layout/_partials/header.swig","hash":"c54b32263bc8d75918688fb21f795103b3f57f03","modified":1547381165409},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1547381165409},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1547381165409},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1547381165410},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1547381165412},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1547381165413},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9be624634703be496a5d2535228bc568a8373af9","modified":1547381165416},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1547381165424},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1547381165424},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1547381165424},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"fa882641da3bd83d9a58a8a97f9d4c62a9ee7b5c","modified":1547381165425},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1547381165425},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1547381165425},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1547381165426},{"_id":"themes/next/scripts/tags/button.js","hash":"eddbb612c15ac27faf11c59c019ce188f33dec2c","modified":1547381165432},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1547381165432},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1547381165433},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1547381165433},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1547381165433},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1547381165434},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1547381165434},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1547381165434},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1547381165435},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1547381165472},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1547381165472},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1547381165473},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1547381165473},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1547381165473},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1547381165474},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1547381165475},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1547381165475},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1547381165475},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1547381165476},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1547381165476},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1547381165476},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1547381165476},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1547381165477},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1547381165477},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1547381165477},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1547381165477},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1547381165478},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1547381165478},{"_id":"source/images/iget/improve-writing-skills-in-workplace.jpg","hash":"c39df74c2e09427754d469c02a87899ea842eafd","modified":1551089792979},{"_id":"source/images/weixin/erweima.svg","hash":"e33dc648c23e58174394897f2941f1170df8f7b6","modified":1547539804485},{"_id":"source/images/weixin/wechat.svg","hash":"f279327267143ff5de946a6e64163e86c07b4679","modified":1547539330030},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547381165415},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547381165415},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547381165461},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547381165461},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547381165462},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547381165470},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547381165471},{"_id":"source/images/JavaEE/SSM-Redis-framework.jpg","hash":"dda4f318a1e9e455a0dfa9d8a950be34f25f22e7","modified":1548483562158},{"_id":"source/images/iget/kiss.jpg","hash":"c85f0e588c51fca486b694d687819675913b5ad0","modified":1551278030790},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1547381165408},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1547381165408},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1547381165410},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1547381165410},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1547381165411},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1547381165411},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1547381165411},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1547381165412},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1547381165412},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1547381165413},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1547381165415},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1547381165416},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1547381165416},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1547381165417},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1547381165417},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"16cb23818909f57dac1a5ada66869971c33d7bd8","modified":1548488179157},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1547381165418},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1547381165418},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"ccc443b22bd4f8c7ac4145664686c756395b90e0","modified":1547381165419},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1547381165419},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1547381165419},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1547381165419},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1547381165420},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1547381165420},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1547381165420},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1547381165421},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1547381165421},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1547381165421},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"4dcc3213c033994d342d02b800b6229295433d30","modified":1547381165422},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1547381165422},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1547381165423},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"493bd5999a1061b981922be92d8277a0f9152447","modified":1547381165422},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4050553d44ba1396174161c9a6bb0f89fa779eca","modified":1547381165423},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1547381165423},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1547381165427},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1547381165427},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1547381165427},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1547381165428},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"6f370e119e2e5bba907d9fbc67e9539e454dbac8","modified":1548486660334},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1547381165461},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1547381165461},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1547381165461},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"58e7dd5947817d9fc30770712fc39b2f52230d1e","modified":1547381165470},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1547381165470},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4069f918ccc312da86db6c51205fc6c6eaabb116","modified":1547381165471},{"_id":"themes/next/source/css/_variables/base.styl","hash":"f311e5847a669c1531d13504e2cc5d2f3c309395","modified":1547527810062},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1547381165479},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0289031200c3d4c2bdd801ee10fff13bb2c353e4","modified":1547381165479},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1547381165479},{"_id":"themes/next/source/js/src/clicklove.js","hash":"9e8e79d69ad8338761272f86fe5cad0ad5e503cc","modified":1547544200137},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1547381165480},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1547381165480},{"_id":"themes/next/source/js/src/instantclick.min.js","hash":"76b10070628006c82c2e5324fc56a7db0a019112","modified":1547542521872},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1547381165480},{"_id":"themes/next/source/js/src/motion.js","hash":"885176ed51d468f662fbf0fc09611f45c7e5a3b1","modified":1547381165481},{"_id":"themes/next/source/js/src/post-details.js","hash":"93a18271b4123dd8f94f09d1439b47c3c19a8712","modified":1547381165481},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1547381165482},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1547381165482},{"_id":"themes/next/source/js/src/utils.js","hash":"b3e9eca64aba59403334f3fa821f100d98d40337","modified":1547381165483},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1547381165490},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1547381165494},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"b02737510e9b89aeed6b54f89f602a9c24b06ff2","modified":1547381165496},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1547381165496},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1547381165497},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1547381165503},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1547381165504},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1547381165504},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1547381165504},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1547381165506},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1547381165506},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1547381165507},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1547381165507},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1547381165507},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1547381165534},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1547381165536},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1547381165536},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1547381165536},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1547381165536},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1547381165537},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1547381165537},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"14264a210bf94232d58d7599ea2ba93bfa4fb458","modified":1547381165538},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"e33aa8fa48b6639d8d8b937d13261597dd473b3a","modified":1547381165539},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"2ce5f3bf15c523b9bfc97720d8884bb22602a454","modified":1547381165539},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1547381165540},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1547381165540},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1547381165540},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1547381165540},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1547381165541},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1547381165541},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1547381165542},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1547381165542},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1547381165542},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1547381165543},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1547381165543},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1547381165543},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1547381165544},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1547381165544},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1547381165545},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1547381165545},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1547381165546},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1547381165551},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1547381165551},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1547381165553},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1547381165554},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1547381165554},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1547381165535},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1547381165426},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1547381165426},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"8f86f694c0749a18ab3ad6f6df75466ca137a4bc","modified":1547381165436},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1547381165436},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1547381165436},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1547381165437},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1547381165437},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1547381165442},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1547381165451},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1547381165458},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"24ee4b356ff55fc6e58f26a929fa07750002cf29","modified":1547381165458},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1547381165458},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1547381165459},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1547381165459},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1547381165459},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1547381165460},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"60fa84aa7731760f05f52dd7d8f79b5f74ac478d","modified":1547381165462},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1547381165463},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1547381165463},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1547381165463},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1547381165464},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"9c99034f8e00d47e978b3959f51eb4a9ded0fcc8","modified":1547381165464},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1547381165464},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1547381165465},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1547381165466},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1547381165467},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"e695e58f714129ca292c2e54cd62c251aca7f7fe","modified":1547381165467},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1547381165467},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1547381165467},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1547381165468},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1547381165469},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1547381165469},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1547381165469},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"ad2dcedf393ed1f3f5afd2508d24969c916d02fc","modified":1547381165469},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1547381165470},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"f1d0b5d7af32c423eaa8bb93ab6a0b45655645dc","modified":1547381165482},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1547381165489},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1547381165490},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1547381165497},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1547381165497},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1547381165498},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1547381165498},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1547381165498},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1547381165499},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1547381165502},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1547381165502},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1547381165503},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1547381165505},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1547381165505},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1547381165508},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1547381165508},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1547381165521},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1547381165550},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1547381165550},{"_id":"source/images/JavaEE/SSM-Redis-architecture.png","hash":"a59ef0d6e600119733ad6f17724778a2a6a285cb","modified":1548578016741},{"_id":"themes/next/source/images/background.jpg","hash":"06f440f82a28cc6b8eb692b8694b65285d88849c","modified":1547510186961},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1547381165488},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1547381165489},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1547381165532},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1547381165534},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1547381165440},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"50450d9fdc8a2b2be8cfca51e3e1a01ffd636c0b","modified":1547381165440},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1547381165440},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1547381165438},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1547381165438},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1547381165439},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1547381165439},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1547381165439},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"9f73c4696f0907aa451a855444f88fc0698fa472","modified":1547381165438},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1547381165441},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1547381165441},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1547381165441},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1547381165441},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1547381165442},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1547381165443},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1547381165443},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1547381165443},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1547381165443},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1547381165444},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"a6c6eb8adba0a090ad1f4b9124e866887f20d10d","modified":1547381165444},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d0d7a5c90d62b685520d2b47fea8ba6019ff5402","modified":1547381165445},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1547381165445},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ca88ea6999a61fb905eb6e72eba5f92d4ee31e6e","modified":1547381165445},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1547381165446},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1547381165446},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"ccb34c52be8adba5996c6b94f9e723bd07d34c16","modified":1547381165446},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1547381165446},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"7968343e41f8b94b318c36289dff1196c3eb1791","modified":1547381165447},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"89d6c3b697efc63de42afd2e89194b1be14152af","modified":1547381165447},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"39f04c4c7237a4e10acd3002331992b79945d241","modified":1547381165448},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1547381165448},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1547381165448},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1547381165448},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1547381165449},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1547381165449},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"c8fe49a4bc014c24dead05b782a7082411a4abc5","modified":1547381165449},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1547381165450},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"5ef6343835f484a2c0770bd1eb9cc443609e4c39","modified":1547381165450},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1547381165450},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1547381165451},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1547381165451},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"f825da191816eef69ea8efb498a7f756d5ebb498","modified":1547381165452},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1547381165452},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1547381165452},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1547381165453},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1547381165453},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1547381165453},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1547381165454},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1547381165455},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1547381165454},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1547381165455},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1547381165455},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1547381165455},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1547381165456},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1547381165456},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1547381165457},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1547381165457},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9c8196394a89dfa40b87bf0019e80144365a9c93","modified":1547381165457},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1547381165465},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1547381165466},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1547381165468},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1547381165486},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1547381165486},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1547381165487},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1547381165487},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1547381165487},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1547381165499},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1547381165500},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1547381165500},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1547381165501},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1547381165500},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1547381165501},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1547381165524},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1547381165526},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1547381165532},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1547381165553},{"_id":"themes/next/source/images/jaime-jasso-ny-paintover-final-2.jpg","hash":"82f213043ae9d96d87cbf3393b3ac7dc3570a74c","modified":1547512849923},{"_id":"source/images/background/andrii-shafetov.jpg","hash":"657ce046c48de15fd8dabcd14b98b4d9c9bd2cb2","modified":1547526949980},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1547381165493},{"_id":"source/images/background/igor-kulkov-in-attic.jpg","hash":"a63fe551bf140af8c1c8d3648280bfe3c03ff55e","modified":1547526593983},{"_id":"themes/next/source/images/olga-orlova-191a.jpg","hash":"b2128bcf9112612182391067d327a9d0cd2a8c14","modified":1547512228160},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1547381165529},{"_id":"source/images/background/andrii-shafetov-03-npc-camp-empty.jpg","hash":"8b3c871a2cf5779d3d9256adaa2e87e5382e1ab3","modified":1547526880457},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1547381165549},{"_id":"source/uploads/avatar.png","hash":"07ed73bdd816093060a79d274f983a3c4686cc61","modified":1544620638764},{"_id":"source/images/avatar.png","hash":"07ed73bdd816093060a79d274f983a3c4686cc61","modified":1544620638764},{"_id":"public/2019/03/07/hello-world.html","hash":"60ad6b803f1ac0213c0121df8d86f3ea7a926d03","modified":1551955350943},{"_id":"public/2019/02/26/tone-content-structure.html","hash":"fa5bca490ab7a90e566f713ffb31829a3bc68f13","modified":1551955350944},{"_id":"public/2019/02/24/improve-writing-skills-in-workplace.html","hash":"c8a51c9f5a0ec3829a2340e9888fca8abebc223f","modified":1551955350944},{"_id":"public/2018/10/26/SSM-framework-Redis.html","hash":"e109bd341206d5b10c016e89ffde57d193579c40","modified":1551955350944},{"_id":"public/index.html","hash":"646d441a21c2020fe93296b0dfdb2b8b717441a8","modified":1551955350944},{"_id":"public/categories/得到/index.html","hash":"93cfe88fd4ecc0fcb22a1c0968443684ffacbff3","modified":1551955350944},{"_id":"public/categories/Java-EE/index.html","hash":"67c89a328c8de89ffde0e771e713912324a76d27","modified":1551955350944},{"_id":"public/tags/得到，职场写作，软技能/index.html","hash":"8db7ad07f42c7edc27c056f1f14cd5f0af2f4656","modified":1551955350944},{"_id":"public/tags/Spring，-Spring-MVC，-MyBatis，-Redis/index.html","hash":"0d2b4cc0bbad5f5be533be1cf4a8cd4d26ede87a","modified":1551955350944},{"_id":"public/archives/index.html","hash":"57c3054020035d7204c41479c8378de1c49e96e2","modified":1551955350944},{"_id":"public/CNAME","hash":"382c04da13dee9bb60a821390b0e94d96c645e0c","modified":1551955350958},{"_id":"public/images/favicon-16x16.png","hash":"8f0739ba20367f670d5f3c4041c9b5995ef32120","modified":1551955350958},{"_id":"public/images/favicon.ico","hash":"14a32315502fd54b186d2aa87342975dfab9edf3","modified":1551955350958},{"_id":"public/images/apple-touch-icon.png","hash":"bdda40e133d62b9cb439b8f1b178f2a8b62cf0cc","modified":1551955350958},{"_id":"public/images/favicon-32x32.png","hash":"63bf85ce06cc65a04af5562d99b53512b3ac382c","modified":1551955350958},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1551955350958},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1551955350958},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1551955350958},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1551955350958},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1551955350958},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1551955350958},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1551955350959},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1551955350959},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1551955350959},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1551955350959},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1551955350959},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1551955350959},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1551955350959},{"_id":"public/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1551955350959},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1551955350959},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1551955350959},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1551955350959},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1551955350959},{"_id":"public/images/iget/improve-writing-skills-in-workplace.jpg","hash":"c39df74c2e09427754d469c02a87899ea842eafd","modified":1551955350959},{"_id":"public/images/weixin/erweima.svg","hash":"e33dc648c23e58174394897f2941f1170df8f7b6","modified":1551955350959},{"_id":"public/images/weixin/wechat.svg","hash":"f279327267143ff5de946a6e64163e86c07b4679","modified":1551955350959},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1551955350959},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1551955350959},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1551955350959},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1551955350959},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1551955350959},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1551955350960},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1551955350960},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1551955350960},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1551955350960},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1551955350960},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1551955350960},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1551955350960},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1551955350960},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1551955350960},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1551955350960},{"_id":"public/images/JavaEE/SSM-Redis-framework.jpg","hash":"dda4f318a1e9e455a0dfa9d8a950be34f25f22e7","modified":1551955351507},{"_id":"public/images/iget/kiss.jpg","hash":"c85f0e588c51fca486b694d687819675913b5ad0","modified":1551955351513},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1551955351514},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1551955351515},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1551955351524},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1551955351524},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1551955351524},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1551955351524},{"_id":"public/js/src/instantclick.min.js","hash":"76b10070628006c82c2e5324fc56a7db0a019112","modified":1551955351525},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1551955351525},{"_id":"public/js/src/clicklove.js","hash":"9e8e79d69ad8338761272f86fe5cad0ad5e503cc","modified":1551955351525},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1551955351525},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1551955351525},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1551955351525},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1551955351525},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1551955351525},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1551955351525},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1551955351525},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1551955351525},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1551955351525},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1551955351525},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1551955351526},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1551955351526},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1551955351526},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1551955351526},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1551955351526},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1551955351527},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1551955351527},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1551955351527},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1551955351527},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1551955351527},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1551955351527},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1551955351527},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1551955351527},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1551955351527},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1551955351527},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1551955351527},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1551955351527},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1551955351527},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1551955351527},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1551955351527},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1551955351527},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1551955351527},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1551955351527},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1551955351528},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1551955351528},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1551955351528},{"_id":"public/css/main.css","hash":"77dbdac84ad8ac6ff6e651d5da5ab0955e61c0d9","modified":1551955351528},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1551955351528},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1551955351528},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1551955351528},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1551955351534},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1551955351534},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1551955351535},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1551955351535},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1551955351535},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1551955351535},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1551955351535},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1551955351535},{"_id":"public/images/JavaEE/SSM-Redis-architecture.png","hash":"a59ef0d6e600119733ad6f17724778a2a6a285cb","modified":1551955351535},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1551955351538},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1551955351538},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1551955351545},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1551955351547},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1551955351570},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1551955351570},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1551955351571},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1551955351571},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1551955351571},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1551955351571},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1551955351571},{"_id":"public/images/background.jpg","hash":"06f440f82a28cc6b8eb692b8694b65285d88849c","modified":1551955351571},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1551955351586},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1551955351586},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1551955351587},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1551955351600},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1551955351600},{"_id":"public/images/jaime-jasso-ny-paintover-final-2.jpg","hash":"82f213043ae9d96d87cbf3393b3ac7dc3570a74c","modified":1551955351620},{"_id":"public/images/background/andrii-shafetov.jpg","hash":"657ce046c48de15fd8dabcd14b98b4d9c9bd2cb2","modified":1551955351621},{"_id":"public/images/background/igor-kulkov-in-attic.jpg","hash":"a63fe551bf140af8c1c8d3648280bfe3c03ff55e","modified":1551955351621},{"_id":"public/images/background/andrii-shafetov-03-npc-camp-empty.jpg","hash":"8b3c871a2cf5779d3d9256adaa2e87e5382e1ab3","modified":1551955351621},{"_id":"public/images/olga-orlova-191a.jpg","hash":"b2128bcf9112612182391067d327a9d0cd2a8c14","modified":1551955351633},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1551955351668},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1551955351668},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1551955351683},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1551955351693},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1551955351703},{"_id":"public/images/avatar.png","hash":"07ed73bdd816093060a79d274f983a3c4686cc61","modified":1551955351704},{"_id":"public/uploads/avatar.png","hash":"07ed73bdd816093060a79d274f983a3c4686cc61","modified":1551955351704}],"Category":[{"name":"得到","_id":"cjsyi57zu0002rcviq5t89uze"},{"name":"Java EE","_id":"cjsyi582p000arcviw1b724p6"}],"Data":[],"Page":[],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2019-03-07T09:57:55.898Z","updated":"2019-03-07T09:57:55.899Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjsyi57zj0000rcvignwxh409","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"得到|怎样提升你的职场写作能力","date":"2019-02-24T09:21:59.000Z","description":null,"image":"/images/iget/improve-writing-skills-in-workplace.jpg","_content":"<p class=\"description\">本文源自得到课程《有效提升你的职场写作能力》。作者戴愫老师，一名跨文化研究者，也是一名企业培训师。本系列共6讲和1个小结，干货满满，由思路清晰，思维缜密的戴愫老师娓娓道来。<br /><b>前两讲是基础课</b>。养成正确的写作习惯——先想再写，然后删。写之前要“想”，想什么呢？用TCS三步构思法——基调、内容、结构。在基础课里，你会学到，在看似人人都会写的邮件里，蕴藏着怎样的高级套路。<b>第三讲和第四讲</b>，教你怎样给文章组织结构。当需要写复杂的文案时，怎样用四大思维能力组织一个高价值的文章，并且怎样写第一段，让文章的价值最大化。<b>最后两讲</b>，带你润色语言，为文章锦上添花——如何写出有权威性，又有亲和力的措辞，也就是让语言有质感、有温度。<b><em>版权归得到App所有，本文及相关内容仅供我个人总结和学习。</em></b></p>\n\n\n<!-- more -->\n\n## 三类职场人士的困惑是什么？\n戴愫老师和很多学员做过深度交流，有三类职场人士：\n- <span style=\"color:#5073b8;\">第一类，职场小兵。他们专业技能强，需要简洁有力地从专业视角影响读者；他们经常需要写一些文章分享信息、阐述观点，比如项目进度报告、会议纪要、工作计划、可行性报告等。</span>\n- 第二类，职场老兵。他们需要通过写营运类报告，列出工作过程和结果，并把“成果”变成“功劳”，证明自己是未来的管理人才。\n- 第三类，职场管理层。需要用高层的故事线来组织文章逻辑。比如说经常需要书写管理类报告，描述清楚商业逻辑，以便公司做出战略决策。\n\n很多人有以下困惑：\n- 因为工作太忙，需要快速成文的方法；\n- 因为没有受过专门的商务写作的训练，分不清商务写作、文学写作、学术写作的清晰界线；\n- 不知道如何从工作中收集一手资料，并从资料上构筑观点；\n- 不知道如何以公司战略为风向标，提出自己的诉求，争取资源；\n- 不知道怎样通过写作，把自己从“做事”的模式，调整为“做贡献”的心态；\n- 写作时 **容易用空洞的言辞，缺乏实质内容**。\n\n## 书面沟通到底是一项什么样的技能？\n### 书面沟通的形式是什么？单向，还是双向？\n书面沟通是一种单向沟通。你写，发给他，他读；或他写，发给你，你读。这是它最大的缺陷！\n没有一个正常成年人喜欢“被通知、被命令”，大家都喜欢“被商量、被探讨”。这意味着，<span style=\"color:#5073b8;\">我们作为作者，要通过“单向沟通的形式”，让读者读出“双向沟通的幻觉”。</span>\n制造这种幻觉很重要。为什么？我们来看第二点。\n### 判断一次沟通是不是100分，标准是什么？\n这个标准是：\n你明白我的意思了，或者我明白你的意思了？不，这只是60分的沟通。\n我们把这件事儿办成了？这是80分。为什么只是80分，如果说这件事情是办成了，但我以后再也不想与你合作了，这就是赢了这场战役，失去了整个战争嘛，不行的。\n那怎么做到100分呢？100分沟通的标准是，我和你理性、感性都达成一致了。注意，感性也要求达成一致。\n职场上永远不要以为把事情搞定有多么难，真正难搞定的是“人”。哪怕是个纯技术问题，也是“人”的作为和不作为。\n### 达成一次100分沟通的基本前提是什么？\n是“信任”。 <span style=\"color:#5073b8;\">信任是超越一切沟通形式、一切沟通技巧最基础的前提。</span>\n汉字的“信”，左边一个人，右边一个言，我们正常的顺序是，先相信这个人，再相信他说的话。这个顺序有可能放在每次书面沟通中吗？\n没可能。很多时候，你和读者没有见过面，哪怕你们见过面，他对你的人格也不一定了解。\n所以，我们需要学习：怎样在文章中大量使用信息化语言，在文字上与读者建立起信任，让他在不认识你，不熟知你的前提下，直接相信你写的话。\n### 书面沟通这项技能的本质\n作为写作者的你要用大量的信息化语言，在文字上与读者建立起信任（这是基本前提），并且，让读者通过单向沟通的形式，读出双向沟通的幻觉（这可以通过写作内容和文字表达来实现），最后，双方理性、感性都达成一致（这是100分沟通的衡量标准）。\n\n重复一遍，书面沟通这项技能本质上就是：\n<span style=\"color:#5073b8;\">作为写作者的你要用大量的信息化语言，在文字上与读者建立起信任，让读者通过单向沟通的形式，读出双向沟通的幻觉，最后双方理性、感性都达成一致。</span>\n## 学完这门课，你能学到那些？\n戴愫老师曾经用这门课，在线下教授了上万名职场人士，他们反馈：\n- 不仅会写了，而且写得更快了；\n- 这堂写作课还帮助他们重塑了个人品牌；\n- 他们通过写作打开了工作思维，写作为他们赢得了信任和尊重，从而，他们在公司里承担了更多的责任，职场道路开阔了。\n\n在写作时，有效表达只是最基本的层次，有效沟通才是终极目标。\n每一次写作，并不是自己做了一次信息传递，每一次写作，你都在为读者创造一次阅读体验。\n一篇好文章，不会让读者读完后困惑地问“so what”**(所以呢?)**，而是发出“wow”**(diao a!)**的赞叹。\n\n<hr />","source":"_posts/得到-怎样提升你的职场写作能力.md","raw":"---\ntitle: 得到|怎样提升你的职场写作能力\ntags: [得到，职场写作，软技能]\ndate: 2019-02-24 17:21:59\npermalink: improve-writing-skills-in-workplace\ncategories: 得到\ndescription:\nimage: /images/iget/improve-writing-skills-in-workplace.jpg\n---\n<p class=\"description\">本文源自得到课程《有效提升你的职场写作能力》。作者戴愫老师，一名跨文化研究者，也是一名企业培训师。本系列共6讲和1个小结，干货满满，由思路清晰，思维缜密的戴愫老师娓娓道来。<br /><b>前两讲是基础课</b>。养成正确的写作习惯——先想再写，然后删。写之前要“想”，想什么呢？用TCS三步构思法——基调、内容、结构。在基础课里，你会学到，在看似人人都会写的邮件里，蕴藏着怎样的高级套路。<b>第三讲和第四讲</b>，教你怎样给文章组织结构。当需要写复杂的文案时，怎样用四大思维能力组织一个高价值的文章，并且怎样写第一段，让文章的价值最大化。<b>最后两讲</b>，带你润色语言，为文章锦上添花——如何写出有权威性，又有亲和力的措辞，也就是让语言有质感、有温度。<b><em>版权归得到App所有，本文及相关内容仅供我个人总结和学习。</em></b></p>\n\n\n<!-- more -->\n\n## 三类职场人士的困惑是什么？\n戴愫老师和很多学员做过深度交流，有三类职场人士：\n- <span style=\"color:#5073b8;\">第一类，职场小兵。他们专业技能强，需要简洁有力地从专业视角影响读者；他们经常需要写一些文章分享信息、阐述观点，比如项目进度报告、会议纪要、工作计划、可行性报告等。</span>\n- 第二类，职场老兵。他们需要通过写营运类报告，列出工作过程和结果，并把“成果”变成“功劳”，证明自己是未来的管理人才。\n- 第三类，职场管理层。需要用高层的故事线来组织文章逻辑。比如说经常需要书写管理类报告，描述清楚商业逻辑，以便公司做出战略决策。\n\n很多人有以下困惑：\n- 因为工作太忙，需要快速成文的方法；\n- 因为没有受过专门的商务写作的训练，分不清商务写作、文学写作、学术写作的清晰界线；\n- 不知道如何从工作中收集一手资料，并从资料上构筑观点；\n- 不知道如何以公司战略为风向标，提出自己的诉求，争取资源；\n- 不知道怎样通过写作，把自己从“做事”的模式，调整为“做贡献”的心态；\n- 写作时 **容易用空洞的言辞，缺乏实质内容**。\n\n## 书面沟通到底是一项什么样的技能？\n### 书面沟通的形式是什么？单向，还是双向？\n书面沟通是一种单向沟通。你写，发给他，他读；或他写，发给你，你读。这是它最大的缺陷！\n没有一个正常成年人喜欢“被通知、被命令”，大家都喜欢“被商量、被探讨”。这意味着，<span style=\"color:#5073b8;\">我们作为作者，要通过“单向沟通的形式”，让读者读出“双向沟通的幻觉”。</span>\n制造这种幻觉很重要。为什么？我们来看第二点。\n### 判断一次沟通是不是100分，标准是什么？\n这个标准是：\n你明白我的意思了，或者我明白你的意思了？不，这只是60分的沟通。\n我们把这件事儿办成了？这是80分。为什么只是80分，如果说这件事情是办成了，但我以后再也不想与你合作了，这就是赢了这场战役，失去了整个战争嘛，不行的。\n那怎么做到100分呢？100分沟通的标准是，我和你理性、感性都达成一致了。注意，感性也要求达成一致。\n职场上永远不要以为把事情搞定有多么难，真正难搞定的是“人”。哪怕是个纯技术问题，也是“人”的作为和不作为。\n### 达成一次100分沟通的基本前提是什么？\n是“信任”。 <span style=\"color:#5073b8;\">信任是超越一切沟通形式、一切沟通技巧最基础的前提。</span>\n汉字的“信”，左边一个人，右边一个言，我们正常的顺序是，先相信这个人，再相信他说的话。这个顺序有可能放在每次书面沟通中吗？\n没可能。很多时候，你和读者没有见过面，哪怕你们见过面，他对你的人格也不一定了解。\n所以，我们需要学习：怎样在文章中大量使用信息化语言，在文字上与读者建立起信任，让他在不认识你，不熟知你的前提下，直接相信你写的话。\n### 书面沟通这项技能的本质\n作为写作者的你要用大量的信息化语言，在文字上与读者建立起信任（这是基本前提），并且，让读者通过单向沟通的形式，读出双向沟通的幻觉（这可以通过写作内容和文字表达来实现），最后，双方理性、感性都达成一致（这是100分沟通的衡量标准）。\n\n重复一遍，书面沟通这项技能本质上就是：\n<span style=\"color:#5073b8;\">作为写作者的你要用大量的信息化语言，在文字上与读者建立起信任，让读者通过单向沟通的形式，读出双向沟通的幻觉，最后双方理性、感性都达成一致。</span>\n## 学完这门课，你能学到那些？\n戴愫老师曾经用这门课，在线下教授了上万名职场人士，他们反馈：\n- 不仅会写了，而且写得更快了；\n- 这堂写作课还帮助他们重塑了个人品牌；\n- 他们通过写作打开了工作思维，写作为他们赢得了信任和尊重，从而，他们在公司里承担了更多的责任，职场道路开阔了。\n\n在写作时，有效表达只是最基本的层次，有效沟通才是终极目标。\n每一次写作，并不是自己做了一次信息传递，每一次写作，你都在为读者创造一次阅读体验。\n一篇好文章，不会让读者读完后困惑地问“so what”**(所以呢?)**，而是发出“wow”**(diao a!)**的赞叹。\n\n<hr />","slug":"improve-writing-skills-in-workplace","published":1,"updated":"2019-02-25T10:15:10.219Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjsyi57zp0001rcvi5r2ktpr7","content":"<p class=\"description\">本文源自得到课程《有效提升你的职场写作能力》。作者戴愫老师，一名跨文化研究者，也是一名企业培训师。本系列共6讲和1个小结，干货满满，由思路清晰，思维缜密的戴愫老师娓娓道来。<br><b>前两讲是基础课</b>。养成正确的写作习惯——先想再写，然后删。写之前要“想”，想什么呢？用TCS三步构思法——基调、内容、结构。在基础课里，你会学到，在看似人人都会写的邮件里，蕴藏着怎样的高级套路。<b>第三讲和第四讲</b>，教你怎样给文章组织结构。当需要写复杂的文案时，怎样用四大思维能力组织一个高价值的文章，并且怎样写第一段，让文章的价值最大化。<b>最后两讲</b>，带你润色语言，为文章锦上添花——如何写出有权威性，又有亲和力的措辞，也就是让语言有质感、有温度。<b><em>版权归得到App所有，本文及相关内容仅供我个人总结和学习。</em></b></p>\n\n\n<a id=\"more\"></a>\n<h2 id=\"三类职场人士的困惑是什么？\"><a href=\"#三类职场人士的困惑是什么？\" class=\"headerlink\" title=\"三类职场人士的困惑是什么？\"></a>三类职场人士的困惑是什么？</h2><p>戴愫老师和很多学员做过深度交流，有三类职场人士：</p>\n<ul>\n<li><span style=\"color:#5073b8;\">第一类，职场小兵。他们专业技能强，需要简洁有力地从专业视角影响读者；他们经常需要写一些文章分享信息、阐述观点，比如项目进度报告、会议纪要、工作计划、可行性报告等。</span></li>\n<li>第二类，职场老兵。他们需要通过写营运类报告，列出工作过程和结果，并把“成果”变成“功劳”，证明自己是未来的管理人才。</li>\n<li>第三类，职场管理层。需要用高层的故事线来组织文章逻辑。比如说经常需要书写管理类报告，描述清楚商业逻辑，以便公司做出战略决策。</li>\n</ul>\n<p>很多人有以下困惑：</p>\n<ul>\n<li>因为工作太忙，需要快速成文的方法；</li>\n<li>因为没有受过专门的商务写作的训练，分不清商务写作、文学写作、学术写作的清晰界线；</li>\n<li>不知道如何从工作中收集一手资料，并从资料上构筑观点；</li>\n<li>不知道如何以公司战略为风向标，提出自己的诉求，争取资源；</li>\n<li>不知道怎样通过写作，把自己从“做事”的模式，调整为“做贡献”的心态；</li>\n<li>写作时 <strong>容易用空洞的言辞，缺乏实质内容</strong>。</li>\n</ul>\n<h2 id=\"书面沟通到底是一项什么样的技能？\"><a href=\"#书面沟通到底是一项什么样的技能？\" class=\"headerlink\" title=\"书面沟通到底是一项什么样的技能？\"></a>书面沟通到底是一项什么样的技能？</h2><h3 id=\"书面沟通的形式是什么？单向，还是双向？\"><a href=\"#书面沟通的形式是什么？单向，还是双向？\" class=\"headerlink\" title=\"书面沟通的形式是什么？单向，还是双向？\"></a>书面沟通的形式是什么？单向，还是双向？</h3><p>书面沟通是一种单向沟通。你写，发给他，他读；或他写，发给你，你读。这是它最大的缺陷！<br>没有一个正常成年人喜欢“被通知、被命令”，大家都喜欢“被商量、被探讨”。这意味着，<span style=\"color:#5073b8;\">我们作为作者，要通过“单向沟通的形式”，让读者读出“双向沟通的幻觉”。</span><br>制造这种幻觉很重要。为什么？我们来看第二点。</p>\n<h3 id=\"判断一次沟通是不是100分，标准是什么？\"><a href=\"#判断一次沟通是不是100分，标准是什么？\" class=\"headerlink\" title=\"判断一次沟通是不是100分，标准是什么？\"></a>判断一次沟通是不是100分，标准是什么？</h3><p>这个标准是：<br>你明白我的意思了，或者我明白你的意思了？不，这只是60分的沟通。<br>我们把这件事儿办成了？这是80分。为什么只是80分，如果说这件事情是办成了，但我以后再也不想与你合作了，这就是赢了这场战役，失去了整个战争嘛，不行的。<br>那怎么做到100分呢？100分沟通的标准是，我和你理性、感性都达成一致了。注意，感性也要求达成一致。<br>职场上永远不要以为把事情搞定有多么难，真正难搞定的是“人”。哪怕是个纯技术问题，也是“人”的作为和不作为。</p>\n<h3 id=\"达成一次100分沟通的基本前提是什么？\"><a href=\"#达成一次100分沟通的基本前提是什么？\" class=\"headerlink\" title=\"达成一次100分沟通的基本前提是什么？\"></a>达成一次100分沟通的基本前提是什么？</h3><p>是“信任”。 <span style=\"color:#5073b8;\">信任是超越一切沟通形式、一切沟通技巧最基础的前提。</span><br>汉字的“信”，左边一个人，右边一个言，我们正常的顺序是，先相信这个人，再相信他说的话。这个顺序有可能放在每次书面沟通中吗？<br>没可能。很多时候，你和读者没有见过面，哪怕你们见过面，他对你的人格也不一定了解。<br>所以，我们需要学习：怎样在文章中大量使用信息化语言，在文字上与读者建立起信任，让他在不认识你，不熟知你的前提下，直接相信你写的话。</p>\n<h3 id=\"书面沟通这项技能的本质\"><a href=\"#书面沟通这项技能的本质\" class=\"headerlink\" title=\"书面沟通这项技能的本质\"></a>书面沟通这项技能的本质</h3><p>作为写作者的你要用大量的信息化语言，在文字上与读者建立起信任（这是基本前提），并且，让读者通过单向沟通的形式，读出双向沟通的幻觉（这可以通过写作内容和文字表达来实现），最后，双方理性、感性都达成一致（这是100分沟通的衡量标准）。</p>\n<p>重复一遍，书面沟通这项技能本质上就是：<br><span style=\"color:#5073b8;\">作为写作者的你要用大量的信息化语言，在文字上与读者建立起信任，让读者通过单向沟通的形式，读出双向沟通的幻觉，最后双方理性、感性都达成一致。</span></p>\n<h2 id=\"学完这门课，你能学到那些？\"><a href=\"#学完这门课，你能学到那些？\" class=\"headerlink\" title=\"学完这门课，你能学到那些？\"></a>学完这门课，你能学到那些？</h2><p>戴愫老师曾经用这门课，在线下教授了上万名职场人士，他们反馈：</p>\n<ul>\n<li>不仅会写了，而且写得更快了；</li>\n<li>这堂写作课还帮助他们重塑了个人品牌；</li>\n<li>他们通过写作打开了工作思维，写作为他们赢得了信任和尊重，从而，他们在公司里承担了更多的责任，职场道路开阔了。</li>\n</ul>\n<p>在写作时，有效表达只是最基本的层次，有效沟通才是终极目标。<br>每一次写作，并不是自己做了一次信息传递，每一次写作，你都在为读者创造一次阅读体验。<br>一篇好文章，不会让读者读完后困惑地问“so what”<strong>(所以呢?)</strong>，而是发出“wow”<strong>(diao a!)</strong>的赞叹。</p>\n<hr>","site":{"data":{}},"excerpt":"<p class=\"description\">本文源自得到课程《有效提升你的职场写作能力》。作者戴愫老师，一名跨文化研究者，也是一名企业培训师。本系列共6讲和1个小结，干货满满，由思路清晰，思维缜密的戴愫老师娓娓道来。<br><b>前两讲是基础课</b>。养成正确的写作习惯——先想再写，然后删。写之前要“想”，想什么呢？用TCS三步构思法——基调、内容、结构。在基础课里，你会学到，在看似人人都会写的邮件里，蕴藏着怎样的高级套路。<b>第三讲和第四讲</b>，教你怎样给文章组织结构。当需要写复杂的文案时，怎样用四大思维能力组织一个高价值的文章，并且怎样写第一段，让文章的价值最大化。<b>最后两讲</b>，带你润色语言，为文章锦上添花——如何写出有权威性，又有亲和力的措辞，也就是让语言有质感、有温度。<b><em>版权归得到App所有，本文及相关内容仅供我个人总结和学习。</em></b></p>","more":"<h2 id=\"三类职场人士的困惑是什么？\"><a href=\"#三类职场人士的困惑是什么？\" class=\"headerlink\" title=\"三类职场人士的困惑是什么？\"></a>三类职场人士的困惑是什么？</h2><p>戴愫老师和很多学员做过深度交流，有三类职场人士：</p>\n<ul>\n<li><span style=\"color:#5073b8;\">第一类，职场小兵。他们专业技能强，需要简洁有力地从专业视角影响读者；他们经常需要写一些文章分享信息、阐述观点，比如项目进度报告、会议纪要、工作计划、可行性报告等。</span></li>\n<li>第二类，职场老兵。他们需要通过写营运类报告，列出工作过程和结果，并把“成果”变成“功劳”，证明自己是未来的管理人才。</li>\n<li>第三类，职场管理层。需要用高层的故事线来组织文章逻辑。比如说经常需要书写管理类报告，描述清楚商业逻辑，以便公司做出战略决策。</li>\n</ul>\n<p>很多人有以下困惑：</p>\n<ul>\n<li>因为工作太忙，需要快速成文的方法；</li>\n<li>因为没有受过专门的商务写作的训练，分不清商务写作、文学写作、学术写作的清晰界线；</li>\n<li>不知道如何从工作中收集一手资料，并从资料上构筑观点；</li>\n<li>不知道如何以公司战略为风向标，提出自己的诉求，争取资源；</li>\n<li>不知道怎样通过写作，把自己从“做事”的模式，调整为“做贡献”的心态；</li>\n<li>写作时 <strong>容易用空洞的言辞，缺乏实质内容</strong>。</li>\n</ul>\n<h2 id=\"书面沟通到底是一项什么样的技能？\"><a href=\"#书面沟通到底是一项什么样的技能？\" class=\"headerlink\" title=\"书面沟通到底是一项什么样的技能？\"></a>书面沟通到底是一项什么样的技能？</h2><h3 id=\"书面沟通的形式是什么？单向，还是双向？\"><a href=\"#书面沟通的形式是什么？单向，还是双向？\" class=\"headerlink\" title=\"书面沟通的形式是什么？单向，还是双向？\"></a>书面沟通的形式是什么？单向，还是双向？</h3><p>书面沟通是一种单向沟通。你写，发给他，他读；或他写，发给你，你读。这是它最大的缺陷！<br>没有一个正常成年人喜欢“被通知、被命令”，大家都喜欢“被商量、被探讨”。这意味着，<span style=\"color:#5073b8;\">我们作为作者，要通过“单向沟通的形式”，让读者读出“双向沟通的幻觉”。</span><br>制造这种幻觉很重要。为什么？我们来看第二点。</p>\n<h3 id=\"判断一次沟通是不是100分，标准是什么？\"><a href=\"#判断一次沟通是不是100分，标准是什么？\" class=\"headerlink\" title=\"判断一次沟通是不是100分，标准是什么？\"></a>判断一次沟通是不是100分，标准是什么？</h3><p>这个标准是：<br>你明白我的意思了，或者我明白你的意思了？不，这只是60分的沟通。<br>我们把这件事儿办成了？这是80分。为什么只是80分，如果说这件事情是办成了，但我以后再也不想与你合作了，这就是赢了这场战役，失去了整个战争嘛，不行的。<br>那怎么做到100分呢？100分沟通的标准是，我和你理性、感性都达成一致了。注意，感性也要求达成一致。<br>职场上永远不要以为把事情搞定有多么难，真正难搞定的是“人”。哪怕是个纯技术问题，也是“人”的作为和不作为。</p>\n<h3 id=\"达成一次100分沟通的基本前提是什么？\"><a href=\"#达成一次100分沟通的基本前提是什么？\" class=\"headerlink\" title=\"达成一次100分沟通的基本前提是什么？\"></a>达成一次100分沟通的基本前提是什么？</h3><p>是“信任”。 <span style=\"color:#5073b8;\">信任是超越一切沟通形式、一切沟通技巧最基础的前提。</span><br>汉字的“信”，左边一个人，右边一个言，我们正常的顺序是，先相信这个人，再相信他说的话。这个顺序有可能放在每次书面沟通中吗？<br>没可能。很多时候，你和读者没有见过面，哪怕你们见过面，他对你的人格也不一定了解。<br>所以，我们需要学习：怎样在文章中大量使用信息化语言，在文字上与读者建立起信任，让他在不认识你，不熟知你的前提下，直接相信你写的话。</p>\n<h3 id=\"书面沟通这项技能的本质\"><a href=\"#书面沟通这项技能的本质\" class=\"headerlink\" title=\"书面沟通这项技能的本质\"></a>书面沟通这项技能的本质</h3><p>作为写作者的你要用大量的信息化语言，在文字上与读者建立起信任（这是基本前提），并且，让读者通过单向沟通的形式，读出双向沟通的幻觉（这可以通过写作内容和文字表达来实现），最后，双方理性、感性都达成一致（这是100分沟通的衡量标准）。</p>\n<p>重复一遍，书面沟通这项技能本质上就是：<br><span style=\"color:#5073b8;\">作为写作者的你要用大量的信息化语言，在文字上与读者建立起信任，让读者通过单向沟通的形式，读出双向沟通的幻觉，最后双方理性、感性都达成一致。</span></p>\n<h2 id=\"学完这门课，你能学到那些？\"><a href=\"#学完这门课，你能学到那些？\" class=\"headerlink\" title=\"学完这门课，你能学到那些？\"></a>学完这门课，你能学到那些？</h2><p>戴愫老师曾经用这门课，在线下教授了上万名职场人士，他们反馈：</p>\n<ul>\n<li>不仅会写了，而且写得更快了；</li>\n<li>这堂写作课还帮助他们重塑了个人品牌；</li>\n<li>他们通过写作打开了工作思维，写作为他们赢得了信任和尊重，从而，他们在公司里承担了更多的责任，职场道路开阔了。</li>\n</ul>\n<p>在写作时，有效表达只是最基本的层次，有效沟通才是终极目标。<br>每一次写作，并不是自己做了一次信息传递，每一次写作，你都在为读者创造一次阅读体验。<br>一篇好文章，不会让读者读完后困惑地问“so what”<strong>(所以呢?)</strong>，而是发出“wow”<strong>(diao a!)</strong>的赞叹。</p>\n<hr>"},{"title":"第一讲|先想后写——TCS三步构思法","date":"2019-02-26T15:15:25.000Z","description":null,"image":"/images/iget/kiss.jpg","_content":"<p class=\"description\">职场写作最忌讳打开电脑就写，请你先想再写。TCS法三个步骤完成构思过程，即tone、content和structure，对应基调、内容和结构。</p>\n\n\n<!-- more -->\n\n## 基调为王，七种文案的标志性语气\n第一步，基调，文章以基调为“王”。基调对了，事半功倍；基调错了，哪怕你传递的信息再重要，我也不会关注。\n正确的基调能传递出文章真正的价值，也就是你的价值。职场写作可以分成四大类，那么每一类都需要传递你的什么价值呢？\n- 第一，总结类，写的是<span style=\"color:#bf91e8;\">成绩</span>，呈现的是<span style=\"color:#FF0033;\">你的潜力</span>；\n- 第二，调查报告类，写的是<span style=\"color:#bf91e8;\">调查结果</span>，呈现的是<span style=\"color:#FF0033;\">你求实的态度</span>；\n- 第三，申请类，内容是<span style=\"color:#bf91e8;\">提问</span>，呈现的是<span style=\"color:#FF0033;\">你主动的思考方式</span>；\n- 第四，计划类，写的是<span style=\"color:#bf91e8;\">阶段任务</span>，呈现的是<span style=\"color:#FF0033;\">你的责任感</span>。\n\n如果明白了要呈现自己什么价值，那你拿捏起文章的基调来，正确的概率就会很高。\n\n*以常见的六种具体文案为例，探讨一下它们的标志性的基调。*\n### 年终总结，基调要求：有深度\n不要写成一份业绩的流水账——因为你的工作结果，领导在看你的总结之前就知道。可他为什么还要看？\n他要读到你的分析能力；他希望你能从对工作感性的认知，上升到理性的规律性的总结；他需要你协助他，对未来做出更正确的决定。\n<span style=\"color:#5073b8;\">由此来看，年终总结不是回顾，而是行动指南。</span>好的年终总结应该：\n- 会将工作成果写出意义，会提供难得的一线经验、不同的视角；\n- 会在罗列了贡献之后，找出问题或机遇，以及怎样解决这个问题，或抓住这个机遇。\n这就是“有深度”。\n\n### 进展汇报，基调要求：不讨教\n在进展汇报里，不能只提问题，向领导讨教，而应该给出方案，向领导汇报。讨教的公式是：您告诉我该怎么做。<span style=\"color:#5073b8;\">汇报的公式是：我这样做，您同意吗？\n这里我想提醒你，哪怕领导没有要求你写进展汇报，你也要养成定期向他汇报的习惯。</span>\n你需要将解决问题过程中的一些重要发现、关键结论、阶段性成果等小胜利，实时呈现给他，让他读出你的认真，让他看到你不断提高工作能力的过程。\n### 调查报告，基调要求：实事求是\n在收集充分的事实资料后，你的措辞是“资料显示、数字表明”，而不是“我认为、我估计”。这种报告才能展现事情的真相，才会有让人惊喜的收获。\n### 请示，基调要求：有主见\n有的人这么写：\n<blockquote>“客户投诉如下，请指示。”</blockquote>\n不管是找领导要人、要钱，或其他任何资源，一定要有清晰的主见。\n比如申请款项，你要给一个量化的标准让领导来裁决，不能模糊不清，让他无据可依、无处下手。<span style=\"color:#5073b8;\">让他做选择题的时候，你也需要提供最佳选项。</span>\n另外，部门主管向上级递交请示的时候，不能采用传声筒的语气。\n不要写“他们抱怨”或“他们声称”，要写“我注意到” “我相信我的团队会……”，这才是有担当、有主见的语气。\n### 批复，基调要求：态度明确\n不能出现这样的措辞：“似属可行” “酌情办理”。\n### 项目计划，基调要求：“可交付”\n不能仅仅写行为。一个项目的成功，不是行动了就可以，而是众多可交付结果的总和。\n- 比如：“选择外部供应商”，这是写行为，改为可交付的结果：**“确定外部供应商”**。\n- 又比如：“草拟消费者调查报告”，这又是写行为，改为可交付结果：**“递交消费者调查报告”**。\n\n这里我再和你多说一点。最好的项目计划书，是按照 **OKR目标管理工具**来写的。O：Objective 目标，KR：Key Results 关键结果。\n简单地说，计划就是由目标和关键结果构成。其中，大目标可以分解成小目标，关键结果是用来衡量这些目标有没有完成的。按照这个工具来写，你的基调自然就是可交付的结果。\n<span style=\"background-color: #f0ad4e;\">  以上就是构思的第一步——基调。</span>\n\n## 从“作者逻辑”切换到“读者逻辑”\nTCS的第二步，C：content，内容。\n你意识到了吗？我们在学校里的写作，读者是教授，他读你的文章的时候是有薪水拿的。在职场上的写作，可不是这样。\n**职场上的读者，大多是“甲方读者”，比如领导、客户、重要合作伙伴，等等。也就是说，他们没有义务读完你的文章，他们可以随时终止阅读。**\n怎么才能让这些甲方读者被你的内容吸引呢？请遵照这个原则：\n<blockquote>先从“作者逻辑”切换到“读者逻辑”，提供“所有必需信息”，然后按照“要话先说”的顺序排列。\n</blockquote>\n也就是说， 你的文章每个部分都要对读者有价值。\n你写第一句话，是为了让他继续看第二句话；你写第二句话，是为了让他继续看第三句话。\n\n举个例子，如果要写一份给投资人的商业计划书，俗称项目BP(Business Plan)。我们先做发散思维，想一想在初次接触时，投资人需要哪些信息来判断是否对项目有信心，是否愿意投资参与该项目？然后，为这些信息排序。\n我最担心你一上来就急着展示自己公司有多厉害，这是作者逻辑。没搭好台就展示自己，操之过急。相反，文章应该从分析整个行业下手，彰显市场空缺。搭建好舞台后，才有机会介绍自己。\n风险投资人也是要最大限度地规避风险的。而先选择行业，再选择个体，是他规避风险的方式，是读者逻辑。\n按照这个逻辑，文章怎样写呢？\n\n<span style=\"background:#eee;\">*第一部分*</span>，写 **“项目愿景”**。 也就是，你要做一件什么样的大事。\n这部分需要有一句高度精炼的话，比如黄太吉的“打造以煎饼果子为核心的中式时尚快餐连锁品牌”。\n对方会问，这件事为什么值得做？于是你给出 **“市场痛点”**。\n比如，摩拜单车是为了解决最后一公里的交通痛点。如果投资人根本不认为这是个痛点，后面一切都白写了。\n<span style=\"background:#eee;\">*再往下*</span>，是 **“解决方案”**。\n论证的是，我们正在做的这个事业，真正能解决得了这个痛点，这把钥匙能开得了这把锁。OK,读者表示认同。\n<span style=\"background:#eee;\">*然后*</span>，他会想，**“市场潜力”**大吗？\n<span style=\"background:#eee;\">*这时*</span>，你该展示市场调查结果了，包括市场规模、用户画像、竞品分析等等。\n那他会接着问，为什么要投你们，而不是别人呢？\n你要阐述自己的 **“独特优势”**。包括行业经验、核心技术、牛人团队，等等。\nOK, 这时读者对你有点儿感觉了。\n\n<span style=\"background:#eee;\">*下一部分*</span>，趁他对你有感觉的时候，拉着他一块儿画饼，你要写 **“发展规划”**了。\n写清楚盈利模式和发展路径。也许你觉得奇怪，为什么这个内容现在才写？其实投资人很有经验，他只要决定和你一块儿干，他会在后期帮你一起完善盈利模式，清晰发展路径。\n\n<span style=\"background:#eee;\">*最后*</span>，做 **“财务分析”**，告诉他，你们缺多少钱。\n为什么把融资额度放最后写呢？\n你想想看，有经验的销售想把东西卖给你的时候，通常不会一上来就报价的。他们都是把商品的价值点全部讲完以后，才把价格说出来，这个时候出现的数字，会让对方觉得是个合理的数字。\n至于 **“退出机制” “利润分红”**这些内容，在初次接触中并不重要，它们都有谈判的空间，所以可以不写。\n<span style=\"background-color: #f0ad4e;\">在**“要话先说”**的顺序下，文章环环相扣，你前一部分阐述得精彩，读者才有兴趣问下一个问题，了解下一个部分。</span>\n\n## “向下想三层”，假设变结论\n进入构思的第三步，TCS的S，structure结构。在你的文章里，可以用向下想三层的逻辑搭建金字塔结构。<span style=\"color:#5073b8;\">金字塔的塔尖，是你鲜明的观点或建议，而下面两层，是证据。</span>\n在这个金字塔里，塔尖，<span style=\"color:#5073b8;\">你鲜明的观点或建议</span>，是 **“投钱给我们吧”**。\n读者自然会问：为什么？\n金字塔第二层，两方面：因为有市场，因为我们强。\n读者又问：有市场？——哪块市场？你们强？——强在哪里？\n金字塔进入第三层的阐述。\n这种顺序，让读者先读到塔尖，这样，不仅他能理解你更快，甚至认同你都更快。\n<span style=\"color:#5073b8;\">因为塔尖就像一个熠熠生辉的宝石，抢先占据了他的阅读记忆，也许他会惴惴不安，也许他会兴奋不已，于是，在他接下来的阅读中，他会自己有意无意地将下面的证据与塔尖做链接，这个被说服过程由他自己来完成了。</span>\n这就是先想再写的TCS构思法。如果不这么做，文章可能会一点一点地偏离方向，最后主张模糊、脉络不明。而修改一份粗糙的文案，花费时间和力气更多。\n\n## 压缩三分之一的文字\n写完以后，还有一个步骤，<span style=\"color:#5073b8;\">压缩，删掉三分之一的文字。</span>相信我，你可以做得到。 商务写作谨遵KISS原则：<span style=\"color:#5073b8;\">keep it short and simple。</span> 句中不能有多余的词，段落中不能有多余的句子。\n你可能会问我：文章到底是要简洁还是详实呢？\n<span style=\"color:#5073b8;\">文字表达要简洁，内容提供要详实。</span>\n深度阐述和实例细节，会让文章更长，但不是冗长。 **“用最少的字表达最多的意思”**，这是我们追求的语言审美境界。\n可以用这三个方法来做到 **“减无可减”**：\n-  把注水的文字压缩掉：“大概”、“一般来说”、“话说回来”，等等。\n-  把“在我看来、我认为、我相信”之类的短语删掉，这是你写的文章，没有必要反复提醒读者这是你的观点。\n-  把意思重复的句子压缩掉：相信读者是聪明人。\n\n简洁的文字体现自律。\n## 本讲小结\n第一讲要结束了。在这一讲中，你要养成先想再写，然后再删的写作习惯。\n写之前，做好TCS三步构思——基调、内容、结构。\n\n<span style=\"background:#EFF890;\">第一步， 基调为王，用正确的基调传递出4类文案的真正价值；\n第二步， 内容，提供“所有必需信息”，从“作者逻辑”切换到“读者逻辑”，并要话先说；\n第三步， 结构，用向下想三层的金字塔结构，把你的假设，变成结论，用结论去说服他人。\n最后， 商务写作的KISS原则要求我们压缩文章，我教了你三个方法。</span>\n\n<hr />","source":"_posts/第一讲-先想后写——TCS三步构思法.md","raw":"---\ntitle: 第一讲|先想后写——TCS三步构思法\ntags: [得到，职场写作，软技能]\ndate: 2019-02-26 23:15:25\npermalink: tone-content-structure\ncategories: 得到\ndescription: \nimage: /images/iget/kiss.jpg\n---\n<p class=\"description\">职场写作最忌讳打开电脑就写，请你先想再写。TCS法三个步骤完成构思过程，即tone、content和structure，对应基调、内容和结构。</p>\n\n\n<!-- more -->\n\n## 基调为王，七种文案的标志性语气\n第一步，基调，文章以基调为“王”。基调对了，事半功倍；基调错了，哪怕你传递的信息再重要，我也不会关注。\n正确的基调能传递出文章真正的价值，也就是你的价值。职场写作可以分成四大类，那么每一类都需要传递你的什么价值呢？\n- 第一，总结类，写的是<span style=\"color:#bf91e8;\">成绩</span>，呈现的是<span style=\"color:#FF0033;\">你的潜力</span>；\n- 第二，调查报告类，写的是<span style=\"color:#bf91e8;\">调查结果</span>，呈现的是<span style=\"color:#FF0033;\">你求实的态度</span>；\n- 第三，申请类，内容是<span style=\"color:#bf91e8;\">提问</span>，呈现的是<span style=\"color:#FF0033;\">你主动的思考方式</span>；\n- 第四，计划类，写的是<span style=\"color:#bf91e8;\">阶段任务</span>，呈现的是<span style=\"color:#FF0033;\">你的责任感</span>。\n\n如果明白了要呈现自己什么价值，那你拿捏起文章的基调来，正确的概率就会很高。\n\n*以常见的六种具体文案为例，探讨一下它们的标志性的基调。*\n### 年终总结，基调要求：有深度\n不要写成一份业绩的流水账——因为你的工作结果，领导在看你的总结之前就知道。可他为什么还要看？\n他要读到你的分析能力；他希望你能从对工作感性的认知，上升到理性的规律性的总结；他需要你协助他，对未来做出更正确的决定。\n<span style=\"color:#5073b8;\">由此来看，年终总结不是回顾，而是行动指南。</span>好的年终总结应该：\n- 会将工作成果写出意义，会提供难得的一线经验、不同的视角；\n- 会在罗列了贡献之后，找出问题或机遇，以及怎样解决这个问题，或抓住这个机遇。\n这就是“有深度”。\n\n### 进展汇报，基调要求：不讨教\n在进展汇报里，不能只提问题，向领导讨教，而应该给出方案，向领导汇报。讨教的公式是：您告诉我该怎么做。<span style=\"color:#5073b8;\">汇报的公式是：我这样做，您同意吗？\n这里我想提醒你，哪怕领导没有要求你写进展汇报，你也要养成定期向他汇报的习惯。</span>\n你需要将解决问题过程中的一些重要发现、关键结论、阶段性成果等小胜利，实时呈现给他，让他读出你的认真，让他看到你不断提高工作能力的过程。\n### 调查报告，基调要求：实事求是\n在收集充分的事实资料后，你的措辞是“资料显示、数字表明”，而不是“我认为、我估计”。这种报告才能展现事情的真相，才会有让人惊喜的收获。\n### 请示，基调要求：有主见\n有的人这么写：\n<blockquote>“客户投诉如下，请指示。”</blockquote>\n不管是找领导要人、要钱，或其他任何资源，一定要有清晰的主见。\n比如申请款项，你要给一个量化的标准让领导来裁决，不能模糊不清，让他无据可依、无处下手。<span style=\"color:#5073b8;\">让他做选择题的时候，你也需要提供最佳选项。</span>\n另外，部门主管向上级递交请示的时候，不能采用传声筒的语气。\n不要写“他们抱怨”或“他们声称”，要写“我注意到” “我相信我的团队会……”，这才是有担当、有主见的语气。\n### 批复，基调要求：态度明确\n不能出现这样的措辞：“似属可行” “酌情办理”。\n### 项目计划，基调要求：“可交付”\n不能仅仅写行为。一个项目的成功，不是行动了就可以，而是众多可交付结果的总和。\n- 比如：“选择外部供应商”，这是写行为，改为可交付的结果：**“确定外部供应商”**。\n- 又比如：“草拟消费者调查报告”，这又是写行为，改为可交付结果：**“递交消费者调查报告”**。\n\n这里我再和你多说一点。最好的项目计划书，是按照 **OKR目标管理工具**来写的。O：Objective 目标，KR：Key Results 关键结果。\n简单地说，计划就是由目标和关键结果构成。其中，大目标可以分解成小目标，关键结果是用来衡量这些目标有没有完成的。按照这个工具来写，你的基调自然就是可交付的结果。\n<span style=\"background-color: #f0ad4e;\">  以上就是构思的第一步——基调。</span>\n\n## 从“作者逻辑”切换到“读者逻辑”\nTCS的第二步，C：content，内容。\n你意识到了吗？我们在学校里的写作，读者是教授，他读你的文章的时候是有薪水拿的。在职场上的写作，可不是这样。\n**职场上的读者，大多是“甲方读者”，比如领导、客户、重要合作伙伴，等等。也就是说，他们没有义务读完你的文章，他们可以随时终止阅读。**\n怎么才能让这些甲方读者被你的内容吸引呢？请遵照这个原则：\n<blockquote>先从“作者逻辑”切换到“读者逻辑”，提供“所有必需信息”，然后按照“要话先说”的顺序排列。\n</blockquote>\n也就是说， 你的文章每个部分都要对读者有价值。\n你写第一句话，是为了让他继续看第二句话；你写第二句话，是为了让他继续看第三句话。\n\n举个例子，如果要写一份给投资人的商业计划书，俗称项目BP(Business Plan)。我们先做发散思维，想一想在初次接触时，投资人需要哪些信息来判断是否对项目有信心，是否愿意投资参与该项目？然后，为这些信息排序。\n我最担心你一上来就急着展示自己公司有多厉害，这是作者逻辑。没搭好台就展示自己，操之过急。相反，文章应该从分析整个行业下手，彰显市场空缺。搭建好舞台后，才有机会介绍自己。\n风险投资人也是要最大限度地规避风险的。而先选择行业，再选择个体，是他规避风险的方式，是读者逻辑。\n按照这个逻辑，文章怎样写呢？\n\n<span style=\"background:#eee;\">*第一部分*</span>，写 **“项目愿景”**。 也就是，你要做一件什么样的大事。\n这部分需要有一句高度精炼的话，比如黄太吉的“打造以煎饼果子为核心的中式时尚快餐连锁品牌”。\n对方会问，这件事为什么值得做？于是你给出 **“市场痛点”**。\n比如，摩拜单车是为了解决最后一公里的交通痛点。如果投资人根本不认为这是个痛点，后面一切都白写了。\n<span style=\"background:#eee;\">*再往下*</span>，是 **“解决方案”**。\n论证的是，我们正在做的这个事业，真正能解决得了这个痛点，这把钥匙能开得了这把锁。OK,读者表示认同。\n<span style=\"background:#eee;\">*然后*</span>，他会想，**“市场潜力”**大吗？\n<span style=\"background:#eee;\">*这时*</span>，你该展示市场调查结果了，包括市场规模、用户画像、竞品分析等等。\n那他会接着问，为什么要投你们，而不是别人呢？\n你要阐述自己的 **“独特优势”**。包括行业经验、核心技术、牛人团队，等等。\nOK, 这时读者对你有点儿感觉了。\n\n<span style=\"background:#eee;\">*下一部分*</span>，趁他对你有感觉的时候，拉着他一块儿画饼，你要写 **“发展规划”**了。\n写清楚盈利模式和发展路径。也许你觉得奇怪，为什么这个内容现在才写？其实投资人很有经验，他只要决定和你一块儿干，他会在后期帮你一起完善盈利模式，清晰发展路径。\n\n<span style=\"background:#eee;\">*最后*</span>，做 **“财务分析”**，告诉他，你们缺多少钱。\n为什么把融资额度放最后写呢？\n你想想看，有经验的销售想把东西卖给你的时候，通常不会一上来就报价的。他们都是把商品的价值点全部讲完以后，才把价格说出来，这个时候出现的数字，会让对方觉得是个合理的数字。\n至于 **“退出机制” “利润分红”**这些内容，在初次接触中并不重要，它们都有谈判的空间，所以可以不写。\n<span style=\"background-color: #f0ad4e;\">在**“要话先说”**的顺序下，文章环环相扣，你前一部分阐述得精彩，读者才有兴趣问下一个问题，了解下一个部分。</span>\n\n## “向下想三层”，假设变结论\n进入构思的第三步，TCS的S，structure结构。在你的文章里，可以用向下想三层的逻辑搭建金字塔结构。<span style=\"color:#5073b8;\">金字塔的塔尖，是你鲜明的观点或建议，而下面两层，是证据。</span>\n在这个金字塔里，塔尖，<span style=\"color:#5073b8;\">你鲜明的观点或建议</span>，是 **“投钱给我们吧”**。\n读者自然会问：为什么？\n金字塔第二层，两方面：因为有市场，因为我们强。\n读者又问：有市场？——哪块市场？你们强？——强在哪里？\n金字塔进入第三层的阐述。\n这种顺序，让读者先读到塔尖，这样，不仅他能理解你更快，甚至认同你都更快。\n<span style=\"color:#5073b8;\">因为塔尖就像一个熠熠生辉的宝石，抢先占据了他的阅读记忆，也许他会惴惴不安，也许他会兴奋不已，于是，在他接下来的阅读中，他会自己有意无意地将下面的证据与塔尖做链接，这个被说服过程由他自己来完成了。</span>\n这就是先想再写的TCS构思法。如果不这么做，文章可能会一点一点地偏离方向，最后主张模糊、脉络不明。而修改一份粗糙的文案，花费时间和力气更多。\n\n## 压缩三分之一的文字\n写完以后，还有一个步骤，<span style=\"color:#5073b8;\">压缩，删掉三分之一的文字。</span>相信我，你可以做得到。 商务写作谨遵KISS原则：<span style=\"color:#5073b8;\">keep it short and simple。</span> 句中不能有多余的词，段落中不能有多余的句子。\n你可能会问我：文章到底是要简洁还是详实呢？\n<span style=\"color:#5073b8;\">文字表达要简洁，内容提供要详实。</span>\n深度阐述和实例细节，会让文章更长，但不是冗长。 **“用最少的字表达最多的意思”**，这是我们追求的语言审美境界。\n可以用这三个方法来做到 **“减无可减”**：\n-  把注水的文字压缩掉：“大概”、“一般来说”、“话说回来”，等等。\n-  把“在我看来、我认为、我相信”之类的短语删掉，这是你写的文章，没有必要反复提醒读者这是你的观点。\n-  把意思重复的句子压缩掉：相信读者是聪明人。\n\n简洁的文字体现自律。\n## 本讲小结\n第一讲要结束了。在这一讲中，你要养成先想再写，然后再删的写作习惯。\n写之前，做好TCS三步构思——基调、内容、结构。\n\n<span style=\"background:#EFF890;\">第一步， 基调为王，用正确的基调传递出4类文案的真正价值；\n第二步， 内容，提供“所有必需信息”，从“作者逻辑”切换到“读者逻辑”，并要话先说；\n第三步， 结构，用向下想三层的金字塔结构，把你的假设，变成结论，用结论去说服他人。\n最后， 商务写作的KISS原则要求我们压缩文章，我教了你三个方法。</span>\n\n<hr />","slug":"tone-content-structure","published":1,"updated":"2019-02-27T14:34:43.935Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjsyi58110006rcvi1awrqgc3","content":"<p class=\"description\">职场写作最忌讳打开电脑就写，请你先想再写。TCS法三个步骤完成构思过程，即tone、content和structure，对应基调、内容和结构。</p>\n\n\n<a id=\"more\"></a>\n<h2 id=\"基调为王，七种文案的标志性语气\"><a href=\"#基调为王，七种文案的标志性语气\" class=\"headerlink\" title=\"基调为王，七种文案的标志性语气\"></a>基调为王，七种文案的标志性语气</h2><p>第一步，基调，文章以基调为“王”。基调对了，事半功倍；基调错了，哪怕你传递的信息再重要，我也不会关注。<br>正确的基调能传递出文章真正的价值，也就是你的价值。职场写作可以分成四大类，那么每一类都需要传递你的什么价值呢？</p>\n<ul>\n<li>第一，总结类，写的是<span style=\"color:#bf91e8;\">成绩</span>，呈现的是<span style=\"color:#FF0033;\">你的潜力</span>；</li>\n<li>第二，调查报告类，写的是<span style=\"color:#bf91e8;\">调查结果</span>，呈现的是<span style=\"color:#FF0033;\">你求实的态度</span>；</li>\n<li>第三，申请类，内容是<span style=\"color:#bf91e8;\">提问</span>，呈现的是<span style=\"color:#FF0033;\">你主动的思考方式</span>；</li>\n<li>第四，计划类，写的是<span style=\"color:#bf91e8;\">阶段任务</span>，呈现的是<span style=\"color:#FF0033;\">你的责任感</span>。</li>\n</ul>\n<p>如果明白了要呈现自己什么价值，那你拿捏起文章的基调来，正确的概率就会很高。</p>\n<p><em>以常见的六种具体文案为例，探讨一下它们的标志性的基调。</em></p>\n<h3 id=\"年终总结，基调要求：有深度\"><a href=\"#年终总结，基调要求：有深度\" class=\"headerlink\" title=\"年终总结，基调要求：有深度\"></a>年终总结，基调要求：有深度</h3><p>不要写成一份业绩的流水账——因为你的工作结果，领导在看你的总结之前就知道。可他为什么还要看？<br>他要读到你的分析能力；他希望你能从对工作感性的认知，上升到理性的规律性的总结；他需要你协助他，对未来做出更正确的决定。<br><span style=\"color:#5073b8;\">由此来看，年终总结不是回顾，而是行动指南。</span>好的年终总结应该：</p>\n<ul>\n<li>会将工作成果写出意义，会提供难得的一线经验、不同的视角；</li>\n<li>会在罗列了贡献之后，找出问题或机遇，以及怎样解决这个问题，或抓住这个机遇。<br>这就是“有深度”。</li>\n</ul>\n<h3 id=\"进展汇报，基调要求：不讨教\"><a href=\"#进展汇报，基调要求：不讨教\" class=\"headerlink\" title=\"进展汇报，基调要求：不讨教\"></a>进展汇报，基调要求：不讨教</h3><p>在进展汇报里，不能只提问题，向领导讨教，而应该给出方案，向领导汇报。讨教的公式是：您告诉我该怎么做。<span style=\"color:#5073b8;\">汇报的公式是：我这样做，您同意吗？<br>这里我想提醒你，哪怕领导没有要求你写进展汇报，你也要养成定期向他汇报的习惯。</span><br>你需要将解决问题过程中的一些重要发现、关键结论、阶段性成果等小胜利，实时呈现给他，让他读出你的认真，让他看到你不断提高工作能力的过程。</p>\n<h3 id=\"调查报告，基调要求：实事求是\"><a href=\"#调查报告，基调要求：实事求是\" class=\"headerlink\" title=\"调查报告，基调要求：实事求是\"></a>调查报告，基调要求：实事求是</h3><p>在收集充分的事实资料后，你的措辞是“资料显示、数字表明”，而不是“我认为、我估计”。这种报告才能展现事情的真相，才会有让人惊喜的收获。</p>\n<h3 id=\"请示，基调要求：有主见\"><a href=\"#请示，基调要求：有主见\" class=\"headerlink\" title=\"请示，基调要求：有主见\"></a>请示，基调要求：有主见</h3><p>有的人这么写：</p>\n<p><blockquote>“客户投诉如下，请指示。”</blockquote><br>不管是找领导要人、要钱，或其他任何资源，一定要有清晰的主见。<br>比如申请款项，你要给一个量化的标准让领导来裁决，不能模糊不清，让他无据可依、无处下手。<span style=\"color:#5073b8;\">让他做选择题的时候，你也需要提供最佳选项。</span><br>另外，部门主管向上级递交请示的时候，不能采用传声筒的语气。<br>不要写“他们抱怨”或“他们声称”，要写“我注意到” “我相信我的团队会……”，这才是有担当、有主见的语气。</p>\n<h3 id=\"批复，基调要求：态度明确\"><a href=\"#批复，基调要求：态度明确\" class=\"headerlink\" title=\"批复，基调要求：态度明确\"></a>批复，基调要求：态度明确</h3><p>不能出现这样的措辞：“似属可行” “酌情办理”。</p>\n<h3 id=\"项目计划，基调要求：“可交付”\"><a href=\"#项目计划，基调要求：“可交付”\" class=\"headerlink\" title=\"项目计划，基调要求：“可交付”\"></a>项目计划，基调要求：“可交付”</h3><p>不能仅仅写行为。一个项目的成功，不是行动了就可以，而是众多可交付结果的总和。</p>\n<ul>\n<li>比如：“选择外部供应商”，这是写行为，改为可交付的结果：<strong>“确定外部供应商”</strong>。</li>\n<li>又比如：“草拟消费者调查报告”，这又是写行为，改为可交付结果：<strong>“递交消费者调查报告”</strong>。</li>\n</ul>\n<p>这里我再和你多说一点。最好的项目计划书，是按照 <strong>OKR目标管理工具</strong>来写的。O：Objective 目标，KR：Key Results 关键结果。<br>简单地说，计划就是由目标和关键结果构成。其中，大目标可以分解成小目标，关键结果是用来衡量这些目标有没有完成的。按照这个工具来写，你的基调自然就是可交付的结果。<br><span style=\"background-color: #f0ad4e;\">  以上就是构思的第一步——基调。</span></p>\n<h2 id=\"从“作者逻辑”切换到“读者逻辑”\"><a href=\"#从“作者逻辑”切换到“读者逻辑”\" class=\"headerlink\" title=\"从“作者逻辑”切换到“读者逻辑”\"></a>从“作者逻辑”切换到“读者逻辑”</h2><p>TCS的第二步，C：content，内容。<br>你意识到了吗？我们在学校里的写作，读者是教授，他读你的文章的时候是有薪水拿的。在职场上的写作，可不是这样。<br><strong>职场上的读者，大多是“甲方读者”，比如领导、客户、重要合作伙伴，等等。也就是说，他们没有义务读完你的文章，他们可以随时终止阅读。</strong><br>怎么才能让这些甲方读者被你的内容吸引呢？请遵照这个原则：</p>\n<p><blockquote>先从“作者逻辑”切换到“读者逻辑”，提供“所有必需信息”，然后按照“要话先说”的顺序排列。<br></blockquote><br>也就是说， 你的文章每个部分都要对读者有价值。<br>你写第一句话，是为了让他继续看第二句话；你写第二句话，是为了让他继续看第三句话。</p>\n<p>举个例子，如果要写一份给投资人的商业计划书，俗称项目BP(Business Plan)。我们先做发散思维，想一想在初次接触时，投资人需要哪些信息来判断是否对项目有信心，是否愿意投资参与该项目？然后，为这些信息排序。<br>我最担心你一上来就急着展示自己公司有多厉害，这是作者逻辑。没搭好台就展示自己，操之过急。相反，文章应该从分析整个行业下手，彰显市场空缺。搭建好舞台后，才有机会介绍自己。<br>风险投资人也是要最大限度地规避风险的。而先选择行业，再选择个体，是他规避风险的方式，是读者逻辑。<br>按照这个逻辑，文章怎样写呢？</p>\n<p><span style=\"background:#eee;\"><em>第一部分</em></span>，写 <strong>“项目愿景”</strong>。 也就是，你要做一件什么样的大事。<br>这部分需要有一句高度精炼的话，比如黄太吉的“打造以煎饼果子为核心的中式时尚快餐连锁品牌”。<br>对方会问，这件事为什么值得做？于是你给出 <strong>“市场痛点”</strong>。<br>比如，摩拜单车是为了解决最后一公里的交通痛点。如果投资人根本不认为这是个痛点，后面一切都白写了。<br><span style=\"background:#eee;\"><em>再往下</em></span>，是 <strong>“解决方案”</strong>。<br>论证的是，我们正在做的这个事业，真正能解决得了这个痛点，这把钥匙能开得了这把锁。OK,读者表示认同。<br><span style=\"background:#eee;\"><em>然后</em></span>，他会想，<strong>“市场潜力”</strong>大吗？<br><span style=\"background:#eee;\"><em>这时</em></span>，你该展示市场调查结果了，包括市场规模、用户画像、竞品分析等等。<br>那他会接着问，为什么要投你们，而不是别人呢？<br>你要阐述自己的 <strong>“独特优势”</strong>。包括行业经验、核心技术、牛人团队，等等。<br>OK, 这时读者对你有点儿感觉了。</p>\n<p><span style=\"background:#eee;\"><em>下一部分</em></span>，趁他对你有感觉的时候，拉着他一块儿画饼，你要写 <strong>“发展规划”</strong>了。<br>写清楚盈利模式和发展路径。也许你觉得奇怪，为什么这个内容现在才写？其实投资人很有经验，他只要决定和你一块儿干，他会在后期帮你一起完善盈利模式，清晰发展路径。</p>\n<p><span style=\"background:#eee;\"><em>最后</em></span>，做 <strong>“财务分析”</strong>，告诉他，你们缺多少钱。<br>为什么把融资额度放最后写呢？<br>你想想看，有经验的销售想把东西卖给你的时候，通常不会一上来就报价的。他们都是把商品的价值点全部讲完以后，才把价格说出来，这个时候出现的数字，会让对方觉得是个合理的数字。<br>至于 <strong>“退出机制” “利润分红”</strong>这些内容，在初次接触中并不重要，它们都有谈判的空间，所以可以不写。<br><span style=\"background-color: #f0ad4e;\">在<strong>“要话先说”</strong>的顺序下，文章环环相扣，你前一部分阐述得精彩，读者才有兴趣问下一个问题，了解下一个部分。</span></p>\n<h2 id=\"“向下想三层”，假设变结论\"><a href=\"#“向下想三层”，假设变结论\" class=\"headerlink\" title=\"“向下想三层”，假设变结论\"></a>“向下想三层”，假设变结论</h2><p>进入构思的第三步，TCS的S，structure结构。在你的文章里，可以用向下想三层的逻辑搭建金字塔结构。<span style=\"color:#5073b8;\">金字塔的塔尖，是你鲜明的观点或建议，而下面两层，是证据。</span><br>在这个金字塔里，塔尖，<span style=\"color:#5073b8;\">你鲜明的观点或建议</span>，是 <strong>“投钱给我们吧”</strong>。<br>读者自然会问：为什么？<br>金字塔第二层，两方面：因为有市场，因为我们强。<br>读者又问：有市场？——哪块市场？你们强？——强在哪里？<br>金字塔进入第三层的阐述。<br>这种顺序，让读者先读到塔尖，这样，不仅他能理解你更快，甚至认同你都更快。<br><span style=\"color:#5073b8;\">因为塔尖就像一个熠熠生辉的宝石，抢先占据了他的阅读记忆，也许他会惴惴不安，也许他会兴奋不已，于是，在他接下来的阅读中，他会自己有意无意地将下面的证据与塔尖做链接，这个被说服过程由他自己来完成了。</span><br>这就是先想再写的TCS构思法。如果不这么做，文章可能会一点一点地偏离方向，最后主张模糊、脉络不明。而修改一份粗糙的文案，花费时间和力气更多。</p>\n<h2 id=\"压缩三分之一的文字\"><a href=\"#压缩三分之一的文字\" class=\"headerlink\" title=\"压缩三分之一的文字\"></a>压缩三分之一的文字</h2><p>写完以后，还有一个步骤，<span style=\"color:#5073b8;\">压缩，删掉三分之一的文字。</span>相信我，你可以做得到。 商务写作谨遵KISS原则：<span style=\"color:#5073b8;\">keep it short and simple。</span> 句中不能有多余的词，段落中不能有多余的句子。<br>你可能会问我：文章到底是要简洁还是详实呢？<br><span style=\"color:#5073b8;\">文字表达要简洁，内容提供要详实。</span><br>深度阐述和实例细节，会让文章更长，但不是冗长。 <strong>“用最少的字表达最多的意思”</strong>，这是我们追求的语言审美境界。<br>可以用这三个方法来做到 <strong>“减无可减”</strong>：</p>\n<ul>\n<li>把注水的文字压缩掉：“大概”、“一般来说”、“话说回来”，等等。</li>\n<li>把“在我看来、我认为、我相信”之类的短语删掉，这是你写的文章，没有必要反复提醒读者这是你的观点。</li>\n<li>把意思重复的句子压缩掉：相信读者是聪明人。</li>\n</ul>\n<p>简洁的文字体现自律。</p>\n<h2 id=\"本讲小结\"><a href=\"#本讲小结\" class=\"headerlink\" title=\"本讲小结\"></a>本讲小结</h2><p>第一讲要结束了。在这一讲中，你要养成先想再写，然后再删的写作习惯。<br>写之前，做好TCS三步构思——基调、内容、结构。</p>\n<p><span style=\"background:#EFF890;\">第一步， 基调为王，用正确的基调传递出4类文案的真正价值；<br>第二步， 内容，提供“所有必需信息”，从“作者逻辑”切换到“读者逻辑”，并要话先说；<br>第三步， 结构，用向下想三层的金字塔结构，把你的假设，变成结论，用结论去说服他人。<br>最后， 商务写作的KISS原则要求我们压缩文章，我教了你三个方法。</span></p>\n<hr>","site":{"data":{}},"excerpt":"<p class=\"description\">职场写作最忌讳打开电脑就写，请你先想再写。TCS法三个步骤完成构思过程，即tone、content和structure，对应基调、内容和结构。</p>","more":"<h2 id=\"基调为王，七种文案的标志性语气\"><a href=\"#基调为王，七种文案的标志性语气\" class=\"headerlink\" title=\"基调为王，七种文案的标志性语气\"></a>基调为王，七种文案的标志性语气</h2><p>第一步，基调，文章以基调为“王”。基调对了，事半功倍；基调错了，哪怕你传递的信息再重要，我也不会关注。<br>正确的基调能传递出文章真正的价值，也就是你的价值。职场写作可以分成四大类，那么每一类都需要传递你的什么价值呢？</p>\n<ul>\n<li>第一，总结类，写的是<span style=\"color:#bf91e8;\">成绩</span>，呈现的是<span style=\"color:#FF0033;\">你的潜力</span>；</li>\n<li>第二，调查报告类，写的是<span style=\"color:#bf91e8;\">调查结果</span>，呈现的是<span style=\"color:#FF0033;\">你求实的态度</span>；</li>\n<li>第三，申请类，内容是<span style=\"color:#bf91e8;\">提问</span>，呈现的是<span style=\"color:#FF0033;\">你主动的思考方式</span>；</li>\n<li>第四，计划类，写的是<span style=\"color:#bf91e8;\">阶段任务</span>，呈现的是<span style=\"color:#FF0033;\">你的责任感</span>。</li>\n</ul>\n<p>如果明白了要呈现自己什么价值，那你拿捏起文章的基调来，正确的概率就会很高。</p>\n<p><em>以常见的六种具体文案为例，探讨一下它们的标志性的基调。</em></p>\n<h3 id=\"年终总结，基调要求：有深度\"><a href=\"#年终总结，基调要求：有深度\" class=\"headerlink\" title=\"年终总结，基调要求：有深度\"></a>年终总结，基调要求：有深度</h3><p>不要写成一份业绩的流水账——因为你的工作结果，领导在看你的总结之前就知道。可他为什么还要看？<br>他要读到你的分析能力；他希望你能从对工作感性的认知，上升到理性的规律性的总结；他需要你协助他，对未来做出更正确的决定。<br><span style=\"color:#5073b8;\">由此来看，年终总结不是回顾，而是行动指南。</span>好的年终总结应该：</p>\n<ul>\n<li>会将工作成果写出意义，会提供难得的一线经验、不同的视角；</li>\n<li>会在罗列了贡献之后，找出问题或机遇，以及怎样解决这个问题，或抓住这个机遇。<br>这就是“有深度”。</li>\n</ul>\n<h3 id=\"进展汇报，基调要求：不讨教\"><a href=\"#进展汇报，基调要求：不讨教\" class=\"headerlink\" title=\"进展汇报，基调要求：不讨教\"></a>进展汇报，基调要求：不讨教</h3><p>在进展汇报里，不能只提问题，向领导讨教，而应该给出方案，向领导汇报。讨教的公式是：您告诉我该怎么做。<span style=\"color:#5073b8;\">汇报的公式是：我这样做，您同意吗？<br>这里我想提醒你，哪怕领导没有要求你写进展汇报，你也要养成定期向他汇报的习惯。</span><br>你需要将解决问题过程中的一些重要发现、关键结论、阶段性成果等小胜利，实时呈现给他，让他读出你的认真，让他看到你不断提高工作能力的过程。</p>\n<h3 id=\"调查报告，基调要求：实事求是\"><a href=\"#调查报告，基调要求：实事求是\" class=\"headerlink\" title=\"调查报告，基调要求：实事求是\"></a>调查报告，基调要求：实事求是</h3><p>在收集充分的事实资料后，你的措辞是“资料显示、数字表明”，而不是“我认为、我估计”。这种报告才能展现事情的真相，才会有让人惊喜的收获。</p>\n<h3 id=\"请示，基调要求：有主见\"><a href=\"#请示，基调要求：有主见\" class=\"headerlink\" title=\"请示，基调要求：有主见\"></a>请示，基调要求：有主见</h3><p>有的人这么写：</p>\n<p><blockquote>“客户投诉如下，请指示。”</blockquote><br>不管是找领导要人、要钱，或其他任何资源，一定要有清晰的主见。<br>比如申请款项，你要给一个量化的标准让领导来裁决，不能模糊不清，让他无据可依、无处下手。<span style=\"color:#5073b8;\">让他做选择题的时候，你也需要提供最佳选项。</span><br>另外，部门主管向上级递交请示的时候，不能采用传声筒的语气。<br>不要写“他们抱怨”或“他们声称”，要写“我注意到” “我相信我的团队会……”，这才是有担当、有主见的语气。</p>\n<h3 id=\"批复，基调要求：态度明确\"><a href=\"#批复，基调要求：态度明确\" class=\"headerlink\" title=\"批复，基调要求：态度明确\"></a>批复，基调要求：态度明确</h3><p>不能出现这样的措辞：“似属可行” “酌情办理”。</p>\n<h3 id=\"项目计划，基调要求：“可交付”\"><a href=\"#项目计划，基调要求：“可交付”\" class=\"headerlink\" title=\"项目计划，基调要求：“可交付”\"></a>项目计划，基调要求：“可交付”</h3><p>不能仅仅写行为。一个项目的成功，不是行动了就可以，而是众多可交付结果的总和。</p>\n<ul>\n<li>比如：“选择外部供应商”，这是写行为，改为可交付的结果：<strong>“确定外部供应商”</strong>。</li>\n<li>又比如：“草拟消费者调查报告”，这又是写行为，改为可交付结果：<strong>“递交消费者调查报告”</strong>。</li>\n</ul>\n<p>这里我再和你多说一点。最好的项目计划书，是按照 <strong>OKR目标管理工具</strong>来写的。O：Objective 目标，KR：Key Results 关键结果。<br>简单地说，计划就是由目标和关键结果构成。其中，大目标可以分解成小目标，关键结果是用来衡量这些目标有没有完成的。按照这个工具来写，你的基调自然就是可交付的结果。<br><span style=\"background-color: #f0ad4e;\">  以上就是构思的第一步——基调。</span></p>\n<h2 id=\"从“作者逻辑”切换到“读者逻辑”\"><a href=\"#从“作者逻辑”切换到“读者逻辑”\" class=\"headerlink\" title=\"从“作者逻辑”切换到“读者逻辑”\"></a>从“作者逻辑”切换到“读者逻辑”</h2><p>TCS的第二步，C：content，内容。<br>你意识到了吗？我们在学校里的写作，读者是教授，他读你的文章的时候是有薪水拿的。在职场上的写作，可不是这样。<br><strong>职场上的读者，大多是“甲方读者”，比如领导、客户、重要合作伙伴，等等。也就是说，他们没有义务读完你的文章，他们可以随时终止阅读。</strong><br>怎么才能让这些甲方读者被你的内容吸引呢？请遵照这个原则：</p>\n<p><blockquote>先从“作者逻辑”切换到“读者逻辑”，提供“所有必需信息”，然后按照“要话先说”的顺序排列。<br></blockquote><br>也就是说， 你的文章每个部分都要对读者有价值。<br>你写第一句话，是为了让他继续看第二句话；你写第二句话，是为了让他继续看第三句话。</p>\n<p>举个例子，如果要写一份给投资人的商业计划书，俗称项目BP(Business Plan)。我们先做发散思维，想一想在初次接触时，投资人需要哪些信息来判断是否对项目有信心，是否愿意投资参与该项目？然后，为这些信息排序。<br>我最担心你一上来就急着展示自己公司有多厉害，这是作者逻辑。没搭好台就展示自己，操之过急。相反，文章应该从分析整个行业下手，彰显市场空缺。搭建好舞台后，才有机会介绍自己。<br>风险投资人也是要最大限度地规避风险的。而先选择行业，再选择个体，是他规避风险的方式，是读者逻辑。<br>按照这个逻辑，文章怎样写呢？</p>\n<p><span style=\"background:#eee;\"><em>第一部分</em></span>，写 <strong>“项目愿景”</strong>。 也就是，你要做一件什么样的大事。<br>这部分需要有一句高度精炼的话，比如黄太吉的“打造以煎饼果子为核心的中式时尚快餐连锁品牌”。<br>对方会问，这件事为什么值得做？于是你给出 <strong>“市场痛点”</strong>。<br>比如，摩拜单车是为了解决最后一公里的交通痛点。如果投资人根本不认为这是个痛点，后面一切都白写了。<br><span style=\"background:#eee;\"><em>再往下</em></span>，是 <strong>“解决方案”</strong>。<br>论证的是，我们正在做的这个事业，真正能解决得了这个痛点，这把钥匙能开得了这把锁。OK,读者表示认同。<br><span style=\"background:#eee;\"><em>然后</em></span>，他会想，<strong>“市场潜力”</strong>大吗？<br><span style=\"background:#eee;\"><em>这时</em></span>，你该展示市场调查结果了，包括市场规模、用户画像、竞品分析等等。<br>那他会接着问，为什么要投你们，而不是别人呢？<br>你要阐述自己的 <strong>“独特优势”</strong>。包括行业经验、核心技术、牛人团队，等等。<br>OK, 这时读者对你有点儿感觉了。</p>\n<p><span style=\"background:#eee;\"><em>下一部分</em></span>，趁他对你有感觉的时候，拉着他一块儿画饼，你要写 <strong>“发展规划”</strong>了。<br>写清楚盈利模式和发展路径。也许你觉得奇怪，为什么这个内容现在才写？其实投资人很有经验，他只要决定和你一块儿干，他会在后期帮你一起完善盈利模式，清晰发展路径。</p>\n<p><span style=\"background:#eee;\"><em>最后</em></span>，做 <strong>“财务分析”</strong>，告诉他，你们缺多少钱。<br>为什么把融资额度放最后写呢？<br>你想想看，有经验的销售想把东西卖给你的时候，通常不会一上来就报价的。他们都是把商品的价值点全部讲完以后，才把价格说出来，这个时候出现的数字，会让对方觉得是个合理的数字。<br>至于 <strong>“退出机制” “利润分红”</strong>这些内容，在初次接触中并不重要，它们都有谈判的空间，所以可以不写。<br><span style=\"background-color: #f0ad4e;\">在<strong>“要话先说”</strong>的顺序下，文章环环相扣，你前一部分阐述得精彩，读者才有兴趣问下一个问题，了解下一个部分。</span></p>\n<h2 id=\"“向下想三层”，假设变结论\"><a href=\"#“向下想三层”，假设变结论\" class=\"headerlink\" title=\"“向下想三层”，假设变结论\"></a>“向下想三层”，假设变结论</h2><p>进入构思的第三步，TCS的S，structure结构。在你的文章里，可以用向下想三层的逻辑搭建金字塔结构。<span style=\"color:#5073b8;\">金字塔的塔尖，是你鲜明的观点或建议，而下面两层，是证据。</span><br>在这个金字塔里，塔尖，<span style=\"color:#5073b8;\">你鲜明的观点或建议</span>，是 <strong>“投钱给我们吧”</strong>。<br>读者自然会问：为什么？<br>金字塔第二层，两方面：因为有市场，因为我们强。<br>读者又问：有市场？——哪块市场？你们强？——强在哪里？<br>金字塔进入第三层的阐述。<br>这种顺序，让读者先读到塔尖，这样，不仅他能理解你更快，甚至认同你都更快。<br><span style=\"color:#5073b8;\">因为塔尖就像一个熠熠生辉的宝石，抢先占据了他的阅读记忆，也许他会惴惴不安，也许他会兴奋不已，于是，在他接下来的阅读中，他会自己有意无意地将下面的证据与塔尖做链接，这个被说服过程由他自己来完成了。</span><br>这就是先想再写的TCS构思法。如果不这么做，文章可能会一点一点地偏离方向，最后主张模糊、脉络不明。而修改一份粗糙的文案，花费时间和力气更多。</p>\n<h2 id=\"压缩三分之一的文字\"><a href=\"#压缩三分之一的文字\" class=\"headerlink\" title=\"压缩三分之一的文字\"></a>压缩三分之一的文字</h2><p>写完以后，还有一个步骤，<span style=\"color:#5073b8;\">压缩，删掉三分之一的文字。</span>相信我，你可以做得到。 商务写作谨遵KISS原则：<span style=\"color:#5073b8;\">keep it short and simple。</span> 句中不能有多余的词，段落中不能有多余的句子。<br>你可能会问我：文章到底是要简洁还是详实呢？<br><span style=\"color:#5073b8;\">文字表达要简洁，内容提供要详实。</span><br>深度阐述和实例细节，会让文章更长，但不是冗长。 <strong>“用最少的字表达最多的意思”</strong>，这是我们追求的语言审美境界。<br>可以用这三个方法来做到 <strong>“减无可减”</strong>：</p>\n<ul>\n<li>把注水的文字压缩掉：“大概”、“一般来说”、“话说回来”，等等。</li>\n<li>把“在我看来、我认为、我相信”之类的短语删掉，这是你写的文章，没有必要反复提醒读者这是你的观点。</li>\n<li>把意思重复的句子压缩掉：相信读者是聪明人。</li>\n</ul>\n<p>简洁的文字体现自律。</p>\n<h2 id=\"本讲小结\"><a href=\"#本讲小结\" class=\"headerlink\" title=\"本讲小结\"></a>本讲小结</h2><p>第一讲要结束了。在这一讲中，你要养成先想再写，然后再删的写作习惯。<br>写之前，做好TCS三步构思——基调、内容、结构。</p>\n<p><span style=\"background:#EFF890;\">第一步， 基调为王，用正确的基调传递出4类文案的真正价值；<br>第二步， 内容，提供“所有必需信息”，从“作者逻辑”切换到“读者逻辑”，并要话先说；<br>第三步， 结构，用向下想三层的金字塔结构，把你的假设，变成结论，用结论去说服他人。<br>最后， 商务写作的KISS原则要求我们压缩文章，我教了你三个方法。</span></p>\n<hr>"},{"title":"认识SSM框架和Redis","date":"2018-10-26T06:09:31.000Z","description":null,"image":"/images/JavaEE/SSM-Redis-framework.jpg","_content":"<p class=\"description\">文章对以下要点进行总结和归纳：1)了解Spring IoC和Spring AOP的基础概念；2)了解MyBatis的特点；3)了解Spring MVC的特点；4)了解为什么要使用NoSQL(Redis)及Redis的优点；5)掌握SSM和Redis的基本结构框图和各种技术的作用。</p>\n\n\n<!-- more -->\n\n## Spring框架\nSpring框架是Java应用最广的框架，它优秀的理念包括 **IoC** (Inversion of Control， 控制反转)和 **AOP** (Aspect Oriented Programming， 面向切面编程)。\n### Spring IoC简介\nSpring IoC（Inversion of Control，控制反转）承担了一个资源管理、整合、即插即拔的功能。举个例子，在Java中我们为国家插座设计两种接口，那我们就可以为两种插座分别new两个对象，但是如果要更改上千次这种插座，难道要new很多对象吗？所以不用new的方式创建对象，而是使用配置的方式，然后使用配置的方式，然后让Spring IoC容器自己通过配置去找到插座。\n不需要去找资源(Bean)，只要向Spring IoC容器描述所需资源，Spring IoC自己会找到你所需要的资源，这就是Spring IoC的理念。这样就把Bean之间的依赖关系解耦了，更容易写出结构清晰的程序。除此之外，Spring IoC还提供对Java Bean生命周期的管理，可以延迟加载，可以在其生命周期内定义一些行为等，更加有效地使用和管理Java资源。\n如果使用new的方式来使用插座，代码如下。\n```java 使用插座1\nUser user = new User();\nSocket socket = new Socket1();\nuser.setSocket(socket);\nuser.useSocket();\n```\n这样会有一个弊端，如果使用其他插座，就需要修改代码。可以使用配置的方式代替new的方式创建对象，让Spring IoC容器通过配置去找到插座。\n```xml 使用Spring IoC注入插座1个用户\n<bean id=\"socket\" class=\"Socket1\" />\n<bean id=\"user\" class=\"xxx.User\">\n    <spanroperty name=\"socket\" ref=\"socket\" />\n</bean>\n```\n只需要修改XML配置文件，就可以切换：\n```diff 切换插座的实现类\n- <bean id=\"socket\" class=\"Socket1\" />\n+ <bean id=\"socket\" class=\"Socket2\" />\n<bean id=\"user\" class=\"xxx.User\">\n    <spanroperty name=\"socket\" ref=\"socket\" />\n</bean>\n```\n显然，IoC的目标就是为了管理Bean而存在的。\n### Spring AOP\nIoC的目标就是为了管理Bean，而Bean是Java面向对象(OOP)的基础设计，比如声明一个用户类、插座类等都是基于面向对象的概念。\n有些情况是面向对象没办法处理的。\n举个例子，生产部门的订单、生产部门、财务部门三者符合OOP的设计理念。订单发出，生产部门审批通过准备付款，但是财务部门发现订单的价格超支了，需要取消订单。 显然超支限定已经不只是影响财务部门了，还会影响生产部门之前所做的审批，需要把它们作废。把预算超支这个条件称为切面，它影响了订单、生产部门和财务部门3个OOP对象。在现实中，这样的切面条件跨越了3个甚至更多的对象，并且影响了它们的协作。所以只用OOP并不完善，还需要面向切面的编程，通过它去管理在切面上的某些对象之间的协作。\nSpring AOP常用于数据库事务的编程，很多情况都如同上而的例子，我们在做完第一步数据库数据更新后，不知道下一步是否会成功，如果下一步失收，会使用数据库事务的回滚功能去回滚事务，使得第一步的数据库更新也作废。\n在Spring AOP实现的数据库事务管理中，是以异常作为消息的。在默认的情况下(可以通过Spring的配置修改)，只要Spring接收到了异常信息，它就会将数据库的事务回滚，从而保证数据的一致性。这样我们就知道在Spring的事务管理中只要让它接收到异常信息，它就会回滚事务，而不需要通过代码来实现这个过程。\n比如上面的例子，可用一段伪代码来进行一些必要的说明。\n```Java Spring AOP处理订单伪代码\nprivate void proceed(Order order) {\n    //判断生产部门是否通过订单，数据库记录订单\n    boolean pflag = productionDept.isPass(order);\n    if(pflag) {//如果生产部门通过进行财务部门审批\n        if (financialDept.isOverBudget(order)) {//财务审批是否超限\n            //抛出异常回滚事务，之前的订单操作也会被回滚\n            throw new RuntimeException(\"预算超限！！\");\n        }\n    }\n}\n```\nSpring AOP的编程屏蔽了数据库代码，只需关注业务代码，知道只要发生了一场异常，Spring会回滚事务就足够了。\n\n## MyBatis简介\nMyBatis的前身是Apache的开源项目iBatis，是一个基于 Java的持久层框架。2010年这个项目由Apache software foundation迁移到Google code，并更名为MyBatis。2013年11月，MyBatis迁移到GitHub上，目前由GitHub提供维护。\nMyBatis的优势在于灵活，它几乎可以代替JDBC，同时提供了接口编程。目前MyBatis的数据访问层 DAO(Data Access Objects)是不需要实现类的，它只需要一个接口和XML(或者注解)。MyBatis提供自动映射、动态SQL、级联、缓存、注解、代码和SQL分离等特性，使用方便，同时也可以对SQL进行优化。因为其具有封装少、映射多样化、支持存储过程、可以进行SQL优化等特点，使得它取代了Hibernate成为了Java互联网中首选的持久框架。\nHibernate作为一种十分流行的框架，它有其无可替代的优势，这里我们有必要讨论一下它和MyBatis的区别。由于MyBatis和Hibernate都是持久层框架，都会涉及数据库，所以首先定义一个数据库表一角色表(t_role)。\n```sql 角色表的sql语句\ncreate table t_role(\n    编号 int(12) primary key，\n    角色名称 varchar(60)，\n    备注 varchar(1024)\n);\n```\n用一个POJO(Plain Ordinary Java Object)和这张表定义的字段对应起来。\n```Java 定义角色POJO\npackage com.learn.chapter1.pojo;\npublic class Role implements java.io.Serializable {\n    private Integer id;\n    private String roleName;\n    private String note;\n    /**\n    * setter and getter\n    **/\n}\n```\n无论是MyBatis还是Hibernate都是依靠某种方法，将数据库的表和POJO映射起来的，这样就可以操作POJO来完成相关的逻辑了。\n### Hibernate简介\n映射规则\n\n|语言    | 映射方法|\n| :----  | :----  |\n| MyBatis | 使用注解方式会受到一定的限制，通常使用XML方式实现映射关系|\n| Hibernate | XML和注解提供映射规则|\n把POJO对象和数据库表相互映射的框架称为对象关系映射(Object Relational Mapping，ORM，或O/RM，或O/R mapping)框架。Hibernate的设计理念是完全面向POJO的，不需要编写SQL就可以通过映射关系来操作数据库，是一种全表映射的体现；MyBatis需要提供SQL去运行。\n```xml Hibernate映射文件\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE hibernate-mapping PUBLIC \"-//Hibernate/Hibernate Mapping DTD 3.0//EN\"\n  \"http://www.hibernate.rg/dtd/hibernate-mapping-3.0.dtd\">\n<hibernate-mapping>\n    <class name=\"com.learn.chapter1.pojo.Role\" tbale=\"t_role\">\n    <id name=\"id\" type=\"java.lang.Integer\">\n        <column name=\"id\" />\n        <generator class=\"identity\" />\n    </id>\n    \n    <spanroperty name=\"roleName\" type=\"string\">\n        <column name=\"role_name\" length=\"60\" not-null=\"true\" />\n    </property>\n    \n    <spanroperty name=\"note\" type=\"string\">\n        <column name=\"note\" length=\"512\" />\n    </property> \n    </class>\n</hibernate-mapping>\n```\n首先，对POJO和表t_role进行了映射配置，把两者映射起来了。然后，对POJO进行操作，从而影响t_role表的数据，比如对其增删改查可以按照如下操作。\n```Java Hibernate通过Session操作数据库数据\n    Session session = null;\n    Transaction tx = null;        \n    try {\n        //打开Session\n        session = HibernateUtil.getSessionFactory().openSession();\n        //事务\n        tx = session.beginTransaction();\n        //POJO\n        Role role = new Role();\n        role.setId(1);\n        role.setRoleName(\"rolename1\");\n        role.setNote(\"note1\");  //保存\n        Role role2 = (Role) session.get(Role.class， 1); //查询\n        role2.setNote(\"修改备注\");\n        session.update(role2); //更新\n        System.err.println(role2.getRoleName());\n        session.delete(role2); //删除\n        tx.commit(); //提交事务\n    } \n    catch (Exception ex) {\n        if (tx != null && tx.isActive()) {\n            tx.rollback(); //回滚事务\n        }\n        ex.printStackTrace();\n    } \n    finally {\n        if (session != null && session.isOpen()) {\n            session.close();\n        }\n    }\n```\n这里没有SQL，因为Hibernate会根据映射关系来生成对应的SQL。\n### MyBatis\n可以自己拟定SQL规则，能精确定义SQL，从而符合移动互联网高并发、大数据、高性能、高响应的需求。MyBatis也需要映射文件把POJO和数据库的表对应起来。\n```xml MyBatis映射文件\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper   PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n  \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"com.learn.chapter1.mapper.RoleMapper\">\n    <resultMap id=\"roleMap\" type=\"com.learn.chaper1.pojo.Role\">\n        <id property=\"id\" column=\"id\" />\n        <result property=\"roleName\" column=\"role_name\" />\n        <result property=\"note\" column=\"note\" />\n    </resultMap>\n    \n    <select id=\"getRole\" resultMap=\"roleMap\">\n        select id， role_name， note from t_rle where id = #{id}\n    </select>\n    \n    <delete id=\"deleteRole\" parameterType=\"int\">\n        delete from t_role where id = #{id}\n    </delete>\n    \n    <insert id=\"insertRole\" parameterType=\"com.learn.chapter1.pojo.Role\">\n        insert into t_role(role_name， note) values(#{roleName}， #{note})\n    </insert>\n    \n    <update id=\"updateRole\" parameterType=\"com.learn.chapter1.pojo.Role\">\n        update t_role set\n        role_name = #{roleName}，\n        note = #{note}\n        where id = #{id}\n    </update> \n</mapper>\n```\n这里的resultMap元素用于定义映射规则，而实际上MyBatis在满足一定的规则下，完成自动映射，而增删改查对应着insert、delete、select、update四个元素。mapper元素中的namespace属性，要和一个接口的全限定名保持一致，而里面的SQL的id也需要和接口定义的方法完全保持一致，定义MyBatis映射文件。\n```Java 定义MyBatis映射文件\npackage com.learn.chapter1.mapper;\nimport com.learn.chapter1.pojo.Role;\n\npublic interface RoleMapper {\n    public Role getRole(Integer id);\n    public int deleteRole(Integer id);\n    public int insertROle(Role role);\n    public int updateROle(Role role);\n}\n```\n定义了MyBatis映射文件，不需要定义一个实现类。\n<span style=\"color:#5073b8;\">显然MyBatis在业务逻辑上和Hibernate是大同小异的。其区别在于，MyBatis需要提供接口和SQL，这意味着工作量会比较大，但是由于自定义SQL、映射关系，所以灵活性、可优化性超过了Hibernate。互联网可优化性、灵活性是十分重要的，因为一条SQL的性能可能相差十几倍到几十倍。</span>\n### Hibernate和MyBatis的区别\nHibernate和MyBatis的增、删、改、查，对于业务逻辑层来说大同小异，对于映射层而言Hibernate的配置不需要接口和SQL，相反MyBatis是需要的。对于Hibernate而言，不需要编写大量的SQL，就可以完全映射，同时提供了日志、缓存、级联(级联比MyBatis强大)等特性，此外还提供HQL( Hibernate Query Language)对POJO进行操作，使用十分方便，但是它也有致命的缺陷。\n由于无须SQL，当多表关联超过3个的时候，通过Hibernate的级联会造成太多性能的丢失，又或者我现在访问一个财务的表，然后它会关联财产信息表，财产又分为机械、原料等，显然机械和原料的字段是不一样的，这样关联字段只能根据特定的条件变化而变化而Hibernate无法支持这样的变化。遇到存储过程，Hibernate只能作罢。更为关键的是性能，在管理系统的时代，对于性能的要求不是那么苛刻，但是在互联网时代性能就是系统的根本，响应过慢就会丧失客户，试想一下谁会去用一个经常需要等待超过10秒以上的应用呢?\n以上的问题MyBatis都可以解决，MyBatis可以自由书写SQL、支持动态SQL、处理列表、动态生成表名、支持存储过程。这样就可以灵活地定义查询语句，满足各类需求和性能优化的需要，这些在互联网系统中是十分重要的。\n但MyBatis也有缺陷。首先，它要编写SQL和映射规则，其工作量稍微大于Hibernate。 其次，它支持的工具也很有限，不能像Hibernate那样有许多的插件可以帮助生成映射代码和关联关系，而即使使用生成工具，往往也需要开发者进一步简化，MyBatis通过手工编码，工作量相对大些。所以对于性能要求不太苛刻的系统，比如管理系统、ERP等推荐使用Hibernate;而对于性能要求高、响应快、灵活的系统则推荐使用MyBatis。\n\n## Spring MVC简介\n也许你还在问为什么使用Spring MVC，Struts 2.x不才是主流吗？看SSH的概念多火!其实很多初学者都混淆了一个概念，SSH时间上指的是Struts 1.x + Spring + Hibernate，这个概念已经有十几年的历史了。在Structs 1.x的时代，Structs1.x是当之无愧的MVC框架的霸主，但是在新的MVC框架涌现的时代，形式已经完全不是这样的了，Structs 2.x借助了Structs 1.x的好名声，让国内开发者认为Structs 2.x是霸主继任者（其实两者在技术上没有任何关系），导致国内的很多程序员大多数学习基于Structs 2.x的框架，有一个貌似很火的概念出来了S2SH(Struts 2.x + Spring + Hibernate)整合开发。\n根据JRebel厂商统计，Spring MVC的市场占有率是40%，而Structs 2.x只有可怜的6%。<span style=\"color:#5073b8;\">Spring MVC是目前Java Web框架当之无愧的霸主。</span>\nSpring MVC和三层架构是什么关系，可能很多读者会抢答：\nMVC：Model + View + Controller (数据模型+视图+控制器)\n三层架构：Prensentation tier + Application tier + Data tier（展现层+应用层+数据访问层）\n那MVC和三层架构有什么关系呢？但是实际上MVC只存在三层架构的展现层，M实际上是数据模型，是包含数据的对象。在Spring MVC里，有一个专门的类叫Model，用来和V之间的数据交互、传值；V指的是视图页面，包含JSP、freeMarker、Velocity、Thymeleaf、Tile等；C当然就是控制器（Spring MVC的注解@Controller的类）。\n而三层架构是整个应用的架构，是由Spring框架负责管理的。一般项目中会有Service层、DAO层，这两个反馈在应用层和数据访问层。\n### Java EE应用的分层模型\n经典的Java EE架构大致上都可以分为如下几层：\n* **Domain Object(领域对象)层**。此层有一系列的POJO(Plain Object Java Object，普通的传统的Java对象)组成，这些对象是该系统的Domain Object(领域对象)，往往包含了各自所需实现的业务逻辑方法。\n* **DAO(Data Access Object，数据访问对象)层**。此层由一系列的DAO组件组成，这些DAO实现了对数据库的创建、查询、更新和删除（CRUD）等原子操作。\n* **Service(业务逻辑)层**。此层由一系列的业务逻辑对象组成，这些业务逻辑对象实现了系统所需的业务逻辑方法。这些业务逻辑方法可能仅仅用于暴露Domain Object对象所实现的业务逻辑方法，也可能是依赖DAO组件实现的业务逻辑方法。\n* **Controller(控制器)层**。此层由一系列控制器组成，这些控制器用于拦截用户请求，并调用业务逻辑组件的业务逻辑方法，处理用户请求，并根据处理结果向不同的表现层组件转发。\n* **View(表现)层**。此层由一系列的JSP页面、Velocity页面、PDF文档视图组件组成，负责手机用户请求，并显示处理结果。\n### Java EE应用的组件\n总体而言，Java EE应用应该大致包括如下几类组件：\n* **表现层组件**。主要负责收集用户输入数据，或者想客户显示系统状态。最常用的表现层技术是JSP，但JSP并不是唯一的表现层技术。表现层还可以由Velocity、FreeMarker和Tapestry等技术完成，或者使用普通的应用程序充当表现层组件，甚至可以是小型智能设备。\n* **控制器组件**。关于Java EE的MVC框架，其提供了一个前端核心控制器，核心控制器负责拦截用户请求，并将请求转发给用户实现的控制器组件。这些用户实现的控制器组件则负责调用业务逻辑方法，处理用户请求。\n* **业务逻辑组件**。这是系统的核心组件，实现系统的业务逻辑。通常，一个业务逻辑方法对应一次用户操作。一个业务逻辑方法应该是一个整体，因此要求对业务逻辑方法增加事务性。业务逻辑方法仅仅实现也呜呜逻辑，不应该进行数据库访问。因此，业务逻辑组件中不应该出现原始的MyBatis、Hibernate和JDBC等API。<span style=\"color:#5073b8;\">最重要的原因是：保证业务逻辑方法的实现与具体的持久层访问技术分离。当系统需要在不同持久层技术之间切换时，系统的业务逻辑组件无序任何改变。</span>\n* **DAO组件**。这个类型的对象比较缺乏变化，每个DAO组件都提供Domain Object对象基本的创建、查询、更新和删除等操作，这些操作对应于数据库的CRUD（创建、查询、更新和删除）等原子操作。当然，如果采用不同的持久层访问技术，DAO组件的会完全不同。为了实现业务逻辑组件的实现与DAO组件的实现分离，程序应该为每个DAO组件都提供接口，业务逻辑组件面向DAO接口编程，这样才能提供更好的解耦。\n* **领域对象组件**。领域对象（Doamin Object）抽象了系统的对象模型。通常而言，这些领域对象的状态都必须保存在数据库里。因此，每个领域对象通常对应一个或多个数据表，领域对象通常需要提供对数据记录的访问方式。\n\n## 最流行的NoSQL -- Redis\nNoSQL(Not Only SQL)存储的数据是半结构化的，Redis成为主要的NoSQL工具。\n1. 响应速度快。\n2. 支持6种数据类型：字符串、哈希结构、列表、集合、可排序集合和基数。比如字符串可以存储Java基础数据类型，哈希可以存储对象，列表可以存储List对象等。\n3. 操作都是原子的。\n4. MultiUtility工具：Redis可以再如缓存、、消息传递队列中使用（Reids支持“发布+订阅”的消息模式），在应用程序如Web应用程序绘画、网站页面点击数等任何短暂的数据中使用。\n\n## SSM+Redis结构框图及概述\n在Java Web中，以Spring + Spring MVC + MyBatis（SSM）作为主流框架，SSM+Redis的结构框图如下：\n![SSM+Redis结构示意图](/images/JavaEE/SSM-Redis-architecture.png)\n- Spring IoC承担了一个资源管理、整合、即插即拔的功能。\n- Spring AOP可以提供切面管理，特别是书U哭事务管理的功能。\n- Spring MVC用于把模型、视图和控制器分层，组合成了一个有机灵活的系统。\n- MyBatis提供了一个数据库访问的持久层，通过MyBatis-Spring项目，它便能和Spring无缝对接。\n- Redis作为缓存工具，它提供了高速度处理数据和缓存数据的功能，使得系统大部分只需要访问缓存，而无须从数据库磁盘中重复读/写；在一些需要高速运算的场合中，也可以先用它来完成运算，再把数据批量存入数据库，这样便能极大地提升互联网系统的性能和响应能力。\n\n在后面会讲解这些技术的使用方法、原理和优化方法。\n\n<hr />","source":"_posts/认识SSM框架和Redis.md","raw":"---\ntitle: 认识SSM框架和Redis\ntags: [Spring， Spring MVC， MyBatis， Redis]\ndate: 2018-10-26 14:09:31\npermalink: SSM-framework-Redis\ncategories: Java EE\ndescription:\nimage: /images/JavaEE/SSM-Redis-framework.jpg\n---\n<p class=\"description\">文章对以下要点进行总结和归纳：1)了解Spring IoC和Spring AOP的基础概念；2)了解MyBatis的特点；3)了解Spring MVC的特点；4)了解为什么要使用NoSQL(Redis)及Redis的优点；5)掌握SSM和Redis的基本结构框图和各种技术的作用。</p>\n\n\n<!-- more -->\n\n## Spring框架\nSpring框架是Java应用最广的框架，它优秀的理念包括 **IoC** (Inversion of Control， 控制反转)和 **AOP** (Aspect Oriented Programming， 面向切面编程)。\n### Spring IoC简介\nSpring IoC（Inversion of Control，控制反转）承担了一个资源管理、整合、即插即拔的功能。举个例子，在Java中我们为国家插座设计两种接口，那我们就可以为两种插座分别new两个对象，但是如果要更改上千次这种插座，难道要new很多对象吗？所以不用new的方式创建对象，而是使用配置的方式，然后使用配置的方式，然后让Spring IoC容器自己通过配置去找到插座。\n不需要去找资源(Bean)，只要向Spring IoC容器描述所需资源，Spring IoC自己会找到你所需要的资源，这就是Spring IoC的理念。这样就把Bean之间的依赖关系解耦了，更容易写出结构清晰的程序。除此之外，Spring IoC还提供对Java Bean生命周期的管理，可以延迟加载，可以在其生命周期内定义一些行为等，更加有效地使用和管理Java资源。\n如果使用new的方式来使用插座，代码如下。\n```java 使用插座1\nUser user = new User();\nSocket socket = new Socket1();\nuser.setSocket(socket);\nuser.useSocket();\n```\n这样会有一个弊端，如果使用其他插座，就需要修改代码。可以使用配置的方式代替new的方式创建对象，让Spring IoC容器通过配置去找到插座。\n```xml 使用Spring IoC注入插座1个用户\n<bean id=\"socket\" class=\"Socket1\" />\n<bean id=\"user\" class=\"xxx.User\">\n    <spanroperty name=\"socket\" ref=\"socket\" />\n</bean>\n```\n只需要修改XML配置文件，就可以切换：\n```diff 切换插座的实现类\n- <bean id=\"socket\" class=\"Socket1\" />\n+ <bean id=\"socket\" class=\"Socket2\" />\n<bean id=\"user\" class=\"xxx.User\">\n    <spanroperty name=\"socket\" ref=\"socket\" />\n</bean>\n```\n显然，IoC的目标就是为了管理Bean而存在的。\n### Spring AOP\nIoC的目标就是为了管理Bean，而Bean是Java面向对象(OOP)的基础设计，比如声明一个用户类、插座类等都是基于面向对象的概念。\n有些情况是面向对象没办法处理的。\n举个例子，生产部门的订单、生产部门、财务部门三者符合OOP的设计理念。订单发出，生产部门审批通过准备付款，但是财务部门发现订单的价格超支了，需要取消订单。 显然超支限定已经不只是影响财务部门了，还会影响生产部门之前所做的审批，需要把它们作废。把预算超支这个条件称为切面，它影响了订单、生产部门和财务部门3个OOP对象。在现实中，这样的切面条件跨越了3个甚至更多的对象，并且影响了它们的协作。所以只用OOP并不完善，还需要面向切面的编程，通过它去管理在切面上的某些对象之间的协作。\nSpring AOP常用于数据库事务的编程，很多情况都如同上而的例子，我们在做完第一步数据库数据更新后，不知道下一步是否会成功，如果下一步失收，会使用数据库事务的回滚功能去回滚事务，使得第一步的数据库更新也作废。\n在Spring AOP实现的数据库事务管理中，是以异常作为消息的。在默认的情况下(可以通过Spring的配置修改)，只要Spring接收到了异常信息，它就会将数据库的事务回滚，从而保证数据的一致性。这样我们就知道在Spring的事务管理中只要让它接收到异常信息，它就会回滚事务，而不需要通过代码来实现这个过程。\n比如上面的例子，可用一段伪代码来进行一些必要的说明。\n```Java Spring AOP处理订单伪代码\nprivate void proceed(Order order) {\n    //判断生产部门是否通过订单，数据库记录订单\n    boolean pflag = productionDept.isPass(order);\n    if(pflag) {//如果生产部门通过进行财务部门审批\n        if (financialDept.isOverBudget(order)) {//财务审批是否超限\n            //抛出异常回滚事务，之前的订单操作也会被回滚\n            throw new RuntimeException(\"预算超限！！\");\n        }\n    }\n}\n```\nSpring AOP的编程屏蔽了数据库代码，只需关注业务代码，知道只要发生了一场异常，Spring会回滚事务就足够了。\n\n## MyBatis简介\nMyBatis的前身是Apache的开源项目iBatis，是一个基于 Java的持久层框架。2010年这个项目由Apache software foundation迁移到Google code，并更名为MyBatis。2013年11月，MyBatis迁移到GitHub上，目前由GitHub提供维护。\nMyBatis的优势在于灵活，它几乎可以代替JDBC，同时提供了接口编程。目前MyBatis的数据访问层 DAO(Data Access Objects)是不需要实现类的，它只需要一个接口和XML(或者注解)。MyBatis提供自动映射、动态SQL、级联、缓存、注解、代码和SQL分离等特性，使用方便，同时也可以对SQL进行优化。因为其具有封装少、映射多样化、支持存储过程、可以进行SQL优化等特点，使得它取代了Hibernate成为了Java互联网中首选的持久框架。\nHibernate作为一种十分流行的框架，它有其无可替代的优势，这里我们有必要讨论一下它和MyBatis的区别。由于MyBatis和Hibernate都是持久层框架，都会涉及数据库，所以首先定义一个数据库表一角色表(t_role)。\n```sql 角色表的sql语句\ncreate table t_role(\n    编号 int(12) primary key，\n    角色名称 varchar(60)，\n    备注 varchar(1024)\n);\n```\n用一个POJO(Plain Ordinary Java Object)和这张表定义的字段对应起来。\n```Java 定义角色POJO\npackage com.learn.chapter1.pojo;\npublic class Role implements java.io.Serializable {\n    private Integer id;\n    private String roleName;\n    private String note;\n    /**\n    * setter and getter\n    **/\n}\n```\n无论是MyBatis还是Hibernate都是依靠某种方法，将数据库的表和POJO映射起来的，这样就可以操作POJO来完成相关的逻辑了。\n### Hibernate简介\n映射规则\n\n|语言    | 映射方法|\n| :----  | :----  |\n| MyBatis | 使用注解方式会受到一定的限制，通常使用XML方式实现映射关系|\n| Hibernate | XML和注解提供映射规则|\n把POJO对象和数据库表相互映射的框架称为对象关系映射(Object Relational Mapping，ORM，或O/RM，或O/R mapping)框架。Hibernate的设计理念是完全面向POJO的，不需要编写SQL就可以通过映射关系来操作数据库，是一种全表映射的体现；MyBatis需要提供SQL去运行。\n```xml Hibernate映射文件\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE hibernate-mapping PUBLIC \"-//Hibernate/Hibernate Mapping DTD 3.0//EN\"\n  \"http://www.hibernate.rg/dtd/hibernate-mapping-3.0.dtd\">\n<hibernate-mapping>\n    <class name=\"com.learn.chapter1.pojo.Role\" tbale=\"t_role\">\n    <id name=\"id\" type=\"java.lang.Integer\">\n        <column name=\"id\" />\n        <generator class=\"identity\" />\n    </id>\n    \n    <spanroperty name=\"roleName\" type=\"string\">\n        <column name=\"role_name\" length=\"60\" not-null=\"true\" />\n    </property>\n    \n    <spanroperty name=\"note\" type=\"string\">\n        <column name=\"note\" length=\"512\" />\n    </property> \n    </class>\n</hibernate-mapping>\n```\n首先，对POJO和表t_role进行了映射配置，把两者映射起来了。然后，对POJO进行操作，从而影响t_role表的数据，比如对其增删改查可以按照如下操作。\n```Java Hibernate通过Session操作数据库数据\n    Session session = null;\n    Transaction tx = null;        \n    try {\n        //打开Session\n        session = HibernateUtil.getSessionFactory().openSession();\n        //事务\n        tx = session.beginTransaction();\n        //POJO\n        Role role = new Role();\n        role.setId(1);\n        role.setRoleName(\"rolename1\");\n        role.setNote(\"note1\");  //保存\n        Role role2 = (Role) session.get(Role.class， 1); //查询\n        role2.setNote(\"修改备注\");\n        session.update(role2); //更新\n        System.err.println(role2.getRoleName());\n        session.delete(role2); //删除\n        tx.commit(); //提交事务\n    } \n    catch (Exception ex) {\n        if (tx != null && tx.isActive()) {\n            tx.rollback(); //回滚事务\n        }\n        ex.printStackTrace();\n    } \n    finally {\n        if (session != null && session.isOpen()) {\n            session.close();\n        }\n    }\n```\n这里没有SQL，因为Hibernate会根据映射关系来生成对应的SQL。\n### MyBatis\n可以自己拟定SQL规则，能精确定义SQL，从而符合移动互联网高并发、大数据、高性能、高响应的需求。MyBatis也需要映射文件把POJO和数据库的表对应起来。\n```xml MyBatis映射文件\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper   PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n  \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"com.learn.chapter1.mapper.RoleMapper\">\n    <resultMap id=\"roleMap\" type=\"com.learn.chaper1.pojo.Role\">\n        <id property=\"id\" column=\"id\" />\n        <result property=\"roleName\" column=\"role_name\" />\n        <result property=\"note\" column=\"note\" />\n    </resultMap>\n    \n    <select id=\"getRole\" resultMap=\"roleMap\">\n        select id， role_name， note from t_rle where id = #{id}\n    </select>\n    \n    <delete id=\"deleteRole\" parameterType=\"int\">\n        delete from t_role where id = #{id}\n    </delete>\n    \n    <insert id=\"insertRole\" parameterType=\"com.learn.chapter1.pojo.Role\">\n        insert into t_role(role_name， note) values(#{roleName}， #{note})\n    </insert>\n    \n    <update id=\"updateRole\" parameterType=\"com.learn.chapter1.pojo.Role\">\n        update t_role set\n        role_name = #{roleName}，\n        note = #{note}\n        where id = #{id}\n    </update> \n</mapper>\n```\n这里的resultMap元素用于定义映射规则，而实际上MyBatis在满足一定的规则下，完成自动映射，而增删改查对应着insert、delete、select、update四个元素。mapper元素中的namespace属性，要和一个接口的全限定名保持一致，而里面的SQL的id也需要和接口定义的方法完全保持一致，定义MyBatis映射文件。\n```Java 定义MyBatis映射文件\npackage com.learn.chapter1.mapper;\nimport com.learn.chapter1.pojo.Role;\n\npublic interface RoleMapper {\n    public Role getRole(Integer id);\n    public int deleteRole(Integer id);\n    public int insertROle(Role role);\n    public int updateROle(Role role);\n}\n```\n定义了MyBatis映射文件，不需要定义一个实现类。\n<span style=\"color:#5073b8;\">显然MyBatis在业务逻辑上和Hibernate是大同小异的。其区别在于，MyBatis需要提供接口和SQL，这意味着工作量会比较大，但是由于自定义SQL、映射关系，所以灵活性、可优化性超过了Hibernate。互联网可优化性、灵活性是十分重要的，因为一条SQL的性能可能相差十几倍到几十倍。</span>\n### Hibernate和MyBatis的区别\nHibernate和MyBatis的增、删、改、查，对于业务逻辑层来说大同小异，对于映射层而言Hibernate的配置不需要接口和SQL，相反MyBatis是需要的。对于Hibernate而言，不需要编写大量的SQL，就可以完全映射，同时提供了日志、缓存、级联(级联比MyBatis强大)等特性，此外还提供HQL( Hibernate Query Language)对POJO进行操作，使用十分方便，但是它也有致命的缺陷。\n由于无须SQL，当多表关联超过3个的时候，通过Hibernate的级联会造成太多性能的丢失，又或者我现在访问一个财务的表，然后它会关联财产信息表，财产又分为机械、原料等，显然机械和原料的字段是不一样的，这样关联字段只能根据特定的条件变化而变化而Hibernate无法支持这样的变化。遇到存储过程，Hibernate只能作罢。更为关键的是性能，在管理系统的时代，对于性能的要求不是那么苛刻，但是在互联网时代性能就是系统的根本，响应过慢就会丧失客户，试想一下谁会去用一个经常需要等待超过10秒以上的应用呢?\n以上的问题MyBatis都可以解决，MyBatis可以自由书写SQL、支持动态SQL、处理列表、动态生成表名、支持存储过程。这样就可以灵活地定义查询语句，满足各类需求和性能优化的需要，这些在互联网系统中是十分重要的。\n但MyBatis也有缺陷。首先，它要编写SQL和映射规则，其工作量稍微大于Hibernate。 其次，它支持的工具也很有限，不能像Hibernate那样有许多的插件可以帮助生成映射代码和关联关系，而即使使用生成工具，往往也需要开发者进一步简化，MyBatis通过手工编码，工作量相对大些。所以对于性能要求不太苛刻的系统，比如管理系统、ERP等推荐使用Hibernate;而对于性能要求高、响应快、灵活的系统则推荐使用MyBatis。\n\n## Spring MVC简介\n也许你还在问为什么使用Spring MVC，Struts 2.x不才是主流吗？看SSH的概念多火!其实很多初学者都混淆了一个概念，SSH时间上指的是Struts 1.x + Spring + Hibernate，这个概念已经有十几年的历史了。在Structs 1.x的时代，Structs1.x是当之无愧的MVC框架的霸主，但是在新的MVC框架涌现的时代，形式已经完全不是这样的了，Structs 2.x借助了Structs 1.x的好名声，让国内开发者认为Structs 2.x是霸主继任者（其实两者在技术上没有任何关系），导致国内的很多程序员大多数学习基于Structs 2.x的框架，有一个貌似很火的概念出来了S2SH(Struts 2.x + Spring + Hibernate)整合开发。\n根据JRebel厂商统计，Spring MVC的市场占有率是40%，而Structs 2.x只有可怜的6%。<span style=\"color:#5073b8;\">Spring MVC是目前Java Web框架当之无愧的霸主。</span>\nSpring MVC和三层架构是什么关系，可能很多读者会抢答：\nMVC：Model + View + Controller (数据模型+视图+控制器)\n三层架构：Prensentation tier + Application tier + Data tier（展现层+应用层+数据访问层）\n那MVC和三层架构有什么关系呢？但是实际上MVC只存在三层架构的展现层，M实际上是数据模型，是包含数据的对象。在Spring MVC里，有一个专门的类叫Model，用来和V之间的数据交互、传值；V指的是视图页面，包含JSP、freeMarker、Velocity、Thymeleaf、Tile等；C当然就是控制器（Spring MVC的注解@Controller的类）。\n而三层架构是整个应用的架构，是由Spring框架负责管理的。一般项目中会有Service层、DAO层，这两个反馈在应用层和数据访问层。\n### Java EE应用的分层模型\n经典的Java EE架构大致上都可以分为如下几层：\n* **Domain Object(领域对象)层**。此层有一系列的POJO(Plain Object Java Object，普通的传统的Java对象)组成，这些对象是该系统的Domain Object(领域对象)，往往包含了各自所需实现的业务逻辑方法。\n* **DAO(Data Access Object，数据访问对象)层**。此层由一系列的DAO组件组成，这些DAO实现了对数据库的创建、查询、更新和删除（CRUD）等原子操作。\n* **Service(业务逻辑)层**。此层由一系列的业务逻辑对象组成，这些业务逻辑对象实现了系统所需的业务逻辑方法。这些业务逻辑方法可能仅仅用于暴露Domain Object对象所实现的业务逻辑方法，也可能是依赖DAO组件实现的业务逻辑方法。\n* **Controller(控制器)层**。此层由一系列控制器组成，这些控制器用于拦截用户请求，并调用业务逻辑组件的业务逻辑方法，处理用户请求，并根据处理结果向不同的表现层组件转发。\n* **View(表现)层**。此层由一系列的JSP页面、Velocity页面、PDF文档视图组件组成，负责手机用户请求，并显示处理结果。\n### Java EE应用的组件\n总体而言，Java EE应用应该大致包括如下几类组件：\n* **表现层组件**。主要负责收集用户输入数据，或者想客户显示系统状态。最常用的表现层技术是JSP，但JSP并不是唯一的表现层技术。表现层还可以由Velocity、FreeMarker和Tapestry等技术完成，或者使用普通的应用程序充当表现层组件，甚至可以是小型智能设备。\n* **控制器组件**。关于Java EE的MVC框架，其提供了一个前端核心控制器，核心控制器负责拦截用户请求，并将请求转发给用户实现的控制器组件。这些用户实现的控制器组件则负责调用业务逻辑方法，处理用户请求。\n* **业务逻辑组件**。这是系统的核心组件，实现系统的业务逻辑。通常，一个业务逻辑方法对应一次用户操作。一个业务逻辑方法应该是一个整体，因此要求对业务逻辑方法增加事务性。业务逻辑方法仅仅实现也呜呜逻辑，不应该进行数据库访问。因此，业务逻辑组件中不应该出现原始的MyBatis、Hibernate和JDBC等API。<span style=\"color:#5073b8;\">最重要的原因是：保证业务逻辑方法的实现与具体的持久层访问技术分离。当系统需要在不同持久层技术之间切换时，系统的业务逻辑组件无序任何改变。</span>\n* **DAO组件**。这个类型的对象比较缺乏变化，每个DAO组件都提供Domain Object对象基本的创建、查询、更新和删除等操作，这些操作对应于数据库的CRUD（创建、查询、更新和删除）等原子操作。当然，如果采用不同的持久层访问技术，DAO组件的会完全不同。为了实现业务逻辑组件的实现与DAO组件的实现分离，程序应该为每个DAO组件都提供接口，业务逻辑组件面向DAO接口编程，这样才能提供更好的解耦。\n* **领域对象组件**。领域对象（Doamin Object）抽象了系统的对象模型。通常而言，这些领域对象的状态都必须保存在数据库里。因此，每个领域对象通常对应一个或多个数据表，领域对象通常需要提供对数据记录的访问方式。\n\n## 最流行的NoSQL -- Redis\nNoSQL(Not Only SQL)存储的数据是半结构化的，Redis成为主要的NoSQL工具。\n1. 响应速度快。\n2. 支持6种数据类型：字符串、哈希结构、列表、集合、可排序集合和基数。比如字符串可以存储Java基础数据类型，哈希可以存储对象，列表可以存储List对象等。\n3. 操作都是原子的。\n4. MultiUtility工具：Redis可以再如缓存、、消息传递队列中使用（Reids支持“发布+订阅”的消息模式），在应用程序如Web应用程序绘画、网站页面点击数等任何短暂的数据中使用。\n\n## SSM+Redis结构框图及概述\n在Java Web中，以Spring + Spring MVC + MyBatis（SSM）作为主流框架，SSM+Redis的结构框图如下：\n![SSM+Redis结构示意图](/images/JavaEE/SSM-Redis-architecture.png)\n- Spring IoC承担了一个资源管理、整合、即插即拔的功能。\n- Spring AOP可以提供切面管理，特别是书U哭事务管理的功能。\n- Spring MVC用于把模型、视图和控制器分层，组合成了一个有机灵活的系统。\n- MyBatis提供了一个数据库访问的持久层，通过MyBatis-Spring项目，它便能和Spring无缝对接。\n- Redis作为缓存工具，它提供了高速度处理数据和缓存数据的功能，使得系统大部分只需要访问缓存，而无须从数据库磁盘中重复读/写；在一些需要高速运算的场合中，也可以先用它来完成运算，再把数据批量存入数据库，这样便能极大地提升互联网系统的性能和响应能力。\n\n在后面会讲解这些技术的使用方法、原理和优化方法。\n\n<hr />","slug":"SSM-framework-Redis","published":1,"updated":"2019-02-25T10:02:52.445Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjsyi582m0009rcvizvei0bjm","content":"<p class=\"description\">文章对以下要点进行总结和归纳：1)了解Spring IoC和Spring AOP的基础概念；2)了解MyBatis的特点；3)了解Spring MVC的特点；4)了解为什么要使用NoSQL(Redis)及Redis的优点；5)掌握SSM和Redis的基本结构框图和各种技术的作用。</p>\n\n\n<a id=\"more\"></a>\n<h2 id=\"Spring框架\"><a href=\"#Spring框架\" class=\"headerlink\" title=\"Spring框架\"></a>Spring框架</h2><p>Spring框架是Java应用最广的框架，它优秀的理念包括 <strong>IoC</strong> (Inversion of Control， 控制反转)和 <strong>AOP</strong> (Aspect Oriented Programming， 面向切面编程)。</p>\n<h3 id=\"Spring-IoC简介\"><a href=\"#Spring-IoC简介\" class=\"headerlink\" title=\"Spring IoC简介\"></a>Spring IoC简介</h3><p>Spring IoC（Inversion of Control，控制反转）承担了一个资源管理、整合、即插即拔的功能。举个例子，在Java中我们为国家插座设计两种接口，那我们就可以为两种插座分别new两个对象，但是如果要更改上千次这种插座，难道要new很多对象吗？所以不用new的方式创建对象，而是使用配置的方式，然后使用配置的方式，然后让Spring IoC容器自己通过配置去找到插座。<br>不需要去找资源(Bean)，只要向Spring IoC容器描述所需资源，Spring IoC自己会找到你所需要的资源，这就是Spring IoC的理念。这样就把Bean之间的依赖关系解耦了，更容易写出结构清晰的程序。除此之外，Spring IoC还提供对Java Bean生命周期的管理，可以延迟加载，可以在其生命周期内定义一些行为等，更加有效地使用和管理Java资源。<br>如果使用new的方式来使用插座，代码如下。<br><figure class=\"highlight java\"><figcaption><span>使用插座1</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">User user = <span class=\"keyword\">new</span> User();</span><br><span class=\"line\">Socket socket = <span class=\"keyword\">new</span> Socket1();</span><br><span class=\"line\">user.setSocket(socket);</span><br><span class=\"line\">user.useSocket();</span><br></pre></td></tr></table></figure></p>\n<p>这样会有一个弊端，如果使用其他插座，就需要修改代码。可以使用配置的方式代替new的方式创建对象，让Spring IoC容器通过配置去找到插座。<br><figure class=\"highlight xml\"><figcaption><span>使用Spring IoC注入插座1个用户</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"socket\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"Socket1\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"user\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"xxx.User\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">spanroperty</span> <span class=\"attr\">name</span>=<span class=\"string\">\"socket\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"socket\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>只需要修改XML配置文件，就可以切换：<br><figure class=\"highlight diff\"><figcaption><span>切换插座的实现类</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"deletion\">- &lt;bean id=\"socket\" class=\"Socket1\" /&gt;</span></span><br><span class=\"line\"><span class=\"addition\">+ &lt;bean id=\"socket\" class=\"Socket2\" /&gt;</span></span><br><span class=\"line\">&lt;bean id=\"user\" class=\"xxx.User\"&gt;</span><br><span class=\"line\">    &lt;spanroperty name=\"socket\" ref=\"socket\" /&gt;</span><br><span class=\"line\">&lt;/bean&gt;</span><br></pre></td></tr></table></figure></p>\n<p>显然，IoC的目标就是为了管理Bean而存在的。</p>\n<h3 id=\"Spring-AOP\"><a href=\"#Spring-AOP\" class=\"headerlink\" title=\"Spring AOP\"></a>Spring AOP</h3><p>IoC的目标就是为了管理Bean，而Bean是Java面向对象(OOP)的基础设计，比如声明一个用户类、插座类等都是基于面向对象的概念。<br>有些情况是面向对象没办法处理的。<br>举个例子，生产部门的订单、生产部门、财务部门三者符合OOP的设计理念。订单发出，生产部门审批通过准备付款，但是财务部门发现订单的价格超支了，需要取消订单。 显然超支限定已经不只是影响财务部门了，还会影响生产部门之前所做的审批，需要把它们作废。把预算超支这个条件称为切面，它影响了订单、生产部门和财务部门3个OOP对象。在现实中，这样的切面条件跨越了3个甚至更多的对象，并且影响了它们的协作。所以只用OOP并不完善，还需要面向切面的编程，通过它去管理在切面上的某些对象之间的协作。<br>Spring AOP常用于数据库事务的编程，很多情况都如同上而的例子，我们在做完第一步数据库数据更新后，不知道下一步是否会成功，如果下一步失收，会使用数据库事务的回滚功能去回滚事务，使得第一步的数据库更新也作废。<br>在Spring AOP实现的数据库事务管理中，是以异常作为消息的。在默认的情况下(可以通过Spring的配置修改)，只要Spring接收到了异常信息，它就会将数据库的事务回滚，从而保证数据的一致性。这样我们就知道在Spring的事务管理中只要让它接收到异常信息，它就会回滚事务，而不需要通过代码来实现这个过程。<br>比如上面的例子，可用一段伪代码来进行一些必要的说明。<br><figure class=\"highlight java\"><figcaption><span>Spring AOP处理订单伪代码</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">proceed</span><span class=\"params\">(Order order)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//判断生产部门是否通过订单，数据库记录订单</span></span><br><span class=\"line\">    <span class=\"keyword\">boolean</span> pflag = productionDept.isPass(order);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(pflag) &#123;<span class=\"comment\">//如果生产部门通过进行财务部门审批</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (financialDept.isOverBudget(order)) &#123;<span class=\"comment\">//财务审批是否超限</span></span><br><span class=\"line\">            <span class=\"comment\">//抛出异常回滚事务，之前的订单操作也会被回滚</span></span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">\"预算超限！！\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>Spring AOP的编程屏蔽了数据库代码，只需关注业务代码，知道只要发生了一场异常，Spring会回滚事务就足够了。</p>\n<h2 id=\"MyBatis简介\"><a href=\"#MyBatis简介\" class=\"headerlink\" title=\"MyBatis简介\"></a>MyBatis简介</h2><p>MyBatis的前身是Apache的开源项目iBatis，是一个基于 Java的持久层框架。2010年这个项目由Apache software foundation迁移到Google code，并更名为MyBatis。2013年11月，MyBatis迁移到GitHub上，目前由GitHub提供维护。<br>MyBatis的优势在于灵活，它几乎可以代替JDBC，同时提供了接口编程。目前MyBatis的数据访问层 DAO(Data Access Objects)是不需要实现类的，它只需要一个接口和XML(或者注解)。MyBatis提供自动映射、动态SQL、级联、缓存、注解、代码和SQL分离等特性，使用方便，同时也可以对SQL进行优化。因为其具有封装少、映射多样化、支持存储过程、可以进行SQL优化等特点，使得它取代了Hibernate成为了Java互联网中首选的持久框架。<br>Hibernate作为一种十分流行的框架，它有其无可替代的优势，这里我们有必要讨论一下它和MyBatis的区别。由于MyBatis和Hibernate都是持久层框架，都会涉及数据库，所以首先定义一个数据库表一角色表(t_role)。<br><figure class=\"highlight sql\"><figcaption><span>角色表的sql语句</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_role(</span><br><span class=\"line\">    编号 <span class=\"built_in\">int</span>(<span class=\"number\">12</span>) primary <span class=\"keyword\">key</span>，</span><br><span class=\"line\">    角色名称 <span class=\"built_in\">varchar</span>(<span class=\"number\">60</span>)，</span><br><span class=\"line\">    备注 <span class=\"built_in\">varchar</span>(<span class=\"number\">1024</span>)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure></p>\n<p>用一个POJO(Plain Ordinary Java Object)和这张表定义的字段对应起来。<br><figure class=\"highlight java\"><figcaption><span>定义角色POJO</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.learn.chapter1.pojo;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Role</span> <span class=\"keyword\">implements</span> <span class=\"title\">java</span>.<span class=\"title\">io</span>.<span class=\"title\">Serializable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String roleName;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String note;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * setter and getter</span></span><br><span class=\"line\"><span class=\"comment\">    **/</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>无论是MyBatis还是Hibernate都是依靠某种方法，将数据库的表和POJO映射起来的，这样就可以操作POJO来完成相关的逻辑了。</p>\n<h3 id=\"Hibernate简介\"><a href=\"#Hibernate简介\" class=\"headerlink\" title=\"Hibernate简介\"></a>Hibernate简介</h3><p>映射规则</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">语言</th>\n<th style=\"text-align:left\">映射方法</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">MyBatis</td>\n<td style=\"text-align:left\">使用注解方式会受到一定的限制，通常使用XML方式实现映射关系</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Hibernate</td>\n<td style=\"text-align:left\">XML和注解提供映射规则</td>\n</tr>\n</tbody>\n</table>\n<p>把POJO对象和数据库表相互映射的框架称为对象关系映射(Object Relational Mapping，ORM，或O/RM，或O/R mapping)框架。Hibernate的设计理念是完全面向POJO的，不需要编写SQL就可以通过映射关系来操作数据库，是一种全表映射的体现；MyBatis需要提供SQL去运行。<br><figure class=\"highlight xml\"><figcaption><span>Hibernate映射文件</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE hibernate-mapping PUBLIC \"-//Hibernate/Hibernate Mapping DTD 3.0//EN\"</span></span><br><span class=\"line\"><span class=\"meta\">  \"http://www.hibernate.rg/dtd/hibernate-mapping-3.0.dtd\"&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">hibernate-mapping</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">class</span> <span class=\"attr\">name</span>=<span class=\"string\">\"com.learn.chapter1.pojo.Role\"</span> <span class=\"attr\">tbale</span>=<span class=\"string\">\"t_role\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">name</span>=<span class=\"string\">\"id\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"java.lang.Integer\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">column</span> <span class=\"attr\">name</span>=<span class=\"string\">\"id\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">generator</span> <span class=\"attr\">class</span>=<span class=\"string\">\"identity\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">spanroperty</span> <span class=\"attr\">name</span>=<span class=\"string\">\"roleName\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"string\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">column</span> <span class=\"attr\">name</span>=<span class=\"string\">\"role_name\"</span> <span class=\"attr\">length</span>=<span class=\"string\">\"60\"</span> <span class=\"attr\">not-null</span>=<span class=\"string\">\"true\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">spanroperty</span> <span class=\"attr\">name</span>=<span class=\"string\">\"note\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"string\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">column</span> <span class=\"attr\">name</span>=<span class=\"string\">\"note\"</span> <span class=\"attr\">length</span>=<span class=\"string\">\"512\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">class</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>首先，对POJO和表t_role进行了映射配置，把两者映射起来了。然后，对POJO进行操作，从而影响t_role表的数据，比如对其增删改查可以按照如下操作。<br><figure class=\"highlight java\"><figcaption><span>Hibernate通过Session操作数据库数据</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Session session = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">Transaction tx = <span class=\"keyword\">null</span>;        </span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//打开Session</span></span><br><span class=\"line\">    session = HibernateUtil.getSessionFactory().openSession();</span><br><span class=\"line\">    <span class=\"comment\">//事务</span></span><br><span class=\"line\">    tx = session.beginTransaction();</span><br><span class=\"line\">    <span class=\"comment\">//POJO</span></span><br><span class=\"line\">    Role role = <span class=\"keyword\">new</span> Role();</span><br><span class=\"line\">    role.setId(<span class=\"number\">1</span>);</span><br><span class=\"line\">    role.setRoleName(<span class=\"string\">\"rolename1\"</span>);</span><br><span class=\"line\">    role.setNote(<span class=\"string\">\"note1\"</span>);  <span class=\"comment\">//保存</span></span><br><span class=\"line\">    Role role2 = (Role) session.get(Role.class， <span class=\"number\">1</span>); <span class=\"comment\">//查询</span></span><br><span class=\"line\">    role2.setNote(<span class=\"string\">\"修改备注\"</span>);</span><br><span class=\"line\">    session.update(role2); <span class=\"comment\">//更新</span></span><br><span class=\"line\">    System.err.println(role2.getRoleName());</span><br><span class=\"line\">    session.delete(role2); <span class=\"comment\">//删除</span></span><br><span class=\"line\">    tx.commit(); <span class=\"comment\">//提交事务</span></span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"keyword\">catch</span> (Exception ex) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (tx != <span class=\"keyword\">null</span> &amp;&amp; tx.isActive()) &#123;</span><br><span class=\"line\">        tx.rollback(); <span class=\"comment\">//回滚事务</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ex.printStackTrace();</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (session != <span class=\"keyword\">null</span> &amp;&amp; session.isOpen()) &#123;</span><br><span class=\"line\">        session.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这里没有SQL，因为Hibernate会根据映射关系来生成对应的SQL。</p>\n<h3 id=\"MyBatis\"><a href=\"#MyBatis\" class=\"headerlink\" title=\"MyBatis\"></a>MyBatis</h3><p>可以自己拟定SQL规则，能精确定义SQL，从而符合移动互联网高并发、大数据、高性能、高响应的需求。MyBatis也需要映射文件把POJO和数据库的表对应起来。<br><figure class=\"highlight xml\"><figcaption><span>MyBatis映射文件</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE mapper   PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"</span></span><br><span class=\"line\"><span class=\"meta\">  \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">\"com.learn.chapter1.mapper.RoleMapper\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">id</span>=<span class=\"string\">\"roleMap\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"com.learn.chaper1.pojo.Role\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">property</span>=<span class=\"string\">\"id\"</span> <span class=\"attr\">column</span>=<span class=\"string\">\"id\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">\"roleName\"</span> <span class=\"attr\">column</span>=<span class=\"string\">\"role_name\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">\"note\"</span> <span class=\"attr\">column</span>=<span class=\"string\">\"note\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"getRole\"</span> <span class=\"attr\">resultMap</span>=<span class=\"string\">\"roleMap\"</span>&gt;</span></span><br><span class=\"line\">        select id， role_name， note from t_rle where id = #&#123;id&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">delete</span> <span class=\"attr\">id</span>=<span class=\"string\">\"deleteRole\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"int\"</span>&gt;</span></span><br><span class=\"line\">        delete from t_role where id = #&#123;id&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">delete</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">insert</span> <span class=\"attr\">id</span>=<span class=\"string\">\"insertRole\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"com.learn.chapter1.pojo.Role\"</span>&gt;</span></span><br><span class=\"line\">        insert into t_role(role_name， note) values(#&#123;roleName&#125;， #&#123;note&#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">insert</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">update</span> <span class=\"attr\">id</span>=<span class=\"string\">\"updateRole\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"com.learn.chapter1.pojo.Role\"</span>&gt;</span></span><br><span class=\"line\">        update t_role set</span><br><span class=\"line\">        role_name = #&#123;roleName&#125;，</span><br><span class=\"line\">        note = #&#123;note&#125;</span><br><span class=\"line\">        where id = #&#123;id&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">update</span>&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>这里的resultMap元素用于定义映射规则，而实际上MyBatis在满足一定的规则下，完成自动映射，而增删改查对应着insert、delete、select、update四个元素。mapper元素中的namespace属性，要和一个接口的全限定名保持一致，而里面的SQL的id也需要和接口定义的方法完全保持一致，定义MyBatis映射文件。<br><figure class=\"highlight java\"><figcaption><span>定义MyBatis映射文件</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.learn.chapter1.mapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.learn.chapter1.pojo.Role;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">RoleMapper</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Role <span class=\"title\">getRole</span><span class=\"params\">(Integer id)</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">deleteRole</span><span class=\"params\">(Integer id)</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">insertROle</span><span class=\"params\">(Role role)</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">updateROle</span><span class=\"params\">(Role role)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>定义了MyBatis映射文件，不需要定义一个实现类。<br><span style=\"color:#5073b8;\">显然MyBatis在业务逻辑上和Hibernate是大同小异的。其区别在于，MyBatis需要提供接口和SQL，这意味着工作量会比较大，但是由于自定义SQL、映射关系，所以灵活性、可优化性超过了Hibernate。互联网可优化性、灵活性是十分重要的，因为一条SQL的性能可能相差十几倍到几十倍。</span></p>\n<h3 id=\"Hibernate和MyBatis的区别\"><a href=\"#Hibernate和MyBatis的区别\" class=\"headerlink\" title=\"Hibernate和MyBatis的区别\"></a>Hibernate和MyBatis的区别</h3><p>Hibernate和MyBatis的增、删、改、查，对于业务逻辑层来说大同小异，对于映射层而言Hibernate的配置不需要接口和SQL，相反MyBatis是需要的。对于Hibernate而言，不需要编写大量的SQL，就可以完全映射，同时提供了日志、缓存、级联(级联比MyBatis强大)等特性，此外还提供HQL( Hibernate Query Language)对POJO进行操作，使用十分方便，但是它也有致命的缺陷。<br>由于无须SQL，当多表关联超过3个的时候，通过Hibernate的级联会造成太多性能的丢失，又或者我现在访问一个财务的表，然后它会关联财产信息表，财产又分为机械、原料等，显然机械和原料的字段是不一样的，这样关联字段只能根据特定的条件变化而变化而Hibernate无法支持这样的变化。遇到存储过程，Hibernate只能作罢。更为关键的是性能，在管理系统的时代，对于性能的要求不是那么苛刻，但是在互联网时代性能就是系统的根本，响应过慢就会丧失客户，试想一下谁会去用一个经常需要等待超过10秒以上的应用呢?<br>以上的问题MyBatis都可以解决，MyBatis可以自由书写SQL、支持动态SQL、处理列表、动态生成表名、支持存储过程。这样就可以灵活地定义查询语句，满足各类需求和性能优化的需要，这些在互联网系统中是十分重要的。<br>但MyBatis也有缺陷。首先，它要编写SQL和映射规则，其工作量稍微大于Hibernate。 其次，它支持的工具也很有限，不能像Hibernate那样有许多的插件可以帮助生成映射代码和关联关系，而即使使用生成工具，往往也需要开发者进一步简化，MyBatis通过手工编码，工作量相对大些。所以对于性能要求不太苛刻的系统，比如管理系统、ERP等推荐使用Hibernate;而对于性能要求高、响应快、灵活的系统则推荐使用MyBatis。</p>\n<h2 id=\"Spring-MVC简介\"><a href=\"#Spring-MVC简介\" class=\"headerlink\" title=\"Spring MVC简介\"></a>Spring MVC简介</h2><p>也许你还在问为什么使用Spring MVC，Struts 2.x不才是主流吗？看SSH的概念多火!其实很多初学者都混淆了一个概念，SSH时间上指的是Struts 1.x + Spring + Hibernate，这个概念已经有十几年的历史了。在Structs 1.x的时代，Structs1.x是当之无愧的MVC框架的霸主，但是在新的MVC框架涌现的时代，形式已经完全不是这样的了，Structs 2.x借助了Structs 1.x的好名声，让国内开发者认为Structs 2.x是霸主继任者（其实两者在技术上没有任何关系），导致国内的很多程序员大多数学习基于Structs 2.x的框架，有一个貌似很火的概念出来了S2SH(Struts 2.x + Spring + Hibernate)整合开发。<br>根据JRebel厂商统计，Spring MVC的市场占有率是40%，而Structs 2.x只有可怜的6%。<span style=\"color:#5073b8;\">Spring MVC是目前Java Web框架当之无愧的霸主。</span><br>Spring MVC和三层架构是什么关系，可能很多读者会抢答：<br>MVC：Model + View + Controller (数据模型+视图+控制器)<br>三层架构：Prensentation tier + Application tier + Data tier（展现层+应用层+数据访问层）<br>那MVC和三层架构有什么关系呢？但是实际上MVC只存在三层架构的展现层，M实际上是数据模型，是包含数据的对象。在Spring MVC里，有一个专门的类叫Model，用来和V之间的数据交互、传值；V指的是视图页面，包含JSP、freeMarker、Velocity、Thymeleaf、Tile等；C当然就是控制器（Spring MVC的注解@Controller的类）。<br>而三层架构是整个应用的架构，是由Spring框架负责管理的。一般项目中会有Service层、DAO层，这两个反馈在应用层和数据访问层。</p>\n<h3 id=\"Java-EE应用的分层模型\"><a href=\"#Java-EE应用的分层模型\" class=\"headerlink\" title=\"Java EE应用的分层模型\"></a>Java EE应用的分层模型</h3><p>经典的Java EE架构大致上都可以分为如下几层：</p>\n<ul>\n<li><strong>Domain Object(领域对象)层</strong>。此层有一系列的POJO(Plain Object Java Object，普通的传统的Java对象)组成，这些对象是该系统的Domain Object(领域对象)，往往包含了各自所需实现的业务逻辑方法。</li>\n<li><strong>DAO(Data Access Object，数据访问对象)层</strong>。此层由一系列的DAO组件组成，这些DAO实现了对数据库的创建、查询、更新和删除（CRUD）等原子操作。</li>\n<li><strong>Service(业务逻辑)层</strong>。此层由一系列的业务逻辑对象组成，这些业务逻辑对象实现了系统所需的业务逻辑方法。这些业务逻辑方法可能仅仅用于暴露Domain Object对象所实现的业务逻辑方法，也可能是依赖DAO组件实现的业务逻辑方法。</li>\n<li><strong>Controller(控制器)层</strong>。此层由一系列控制器组成，这些控制器用于拦截用户请求，并调用业务逻辑组件的业务逻辑方法，处理用户请求，并根据处理结果向不同的表现层组件转发。</li>\n<li><strong>View(表现)层</strong>。此层由一系列的JSP页面、Velocity页面、PDF文档视图组件组成，负责手机用户请求，并显示处理结果。<h3 id=\"Java-EE应用的组件\"><a href=\"#Java-EE应用的组件\" class=\"headerlink\" title=\"Java EE应用的组件\"></a>Java EE应用的组件</h3>总体而言，Java EE应用应该大致包括如下几类组件：</li>\n<li><strong>表现层组件</strong>。主要负责收集用户输入数据，或者想客户显示系统状态。最常用的表现层技术是JSP，但JSP并不是唯一的表现层技术。表现层还可以由Velocity、FreeMarker和Tapestry等技术完成，或者使用普通的应用程序充当表现层组件，甚至可以是小型智能设备。</li>\n<li><strong>控制器组件</strong>。关于Java EE的MVC框架，其提供了一个前端核心控制器，核心控制器负责拦截用户请求，并将请求转发给用户实现的控制器组件。这些用户实现的控制器组件则负责调用业务逻辑方法，处理用户请求。</li>\n<li><strong>业务逻辑组件</strong>。这是系统的核心组件，实现系统的业务逻辑。通常，一个业务逻辑方法对应一次用户操作。一个业务逻辑方法应该是一个整体，因此要求对业务逻辑方法增加事务性。业务逻辑方法仅仅实现也呜呜逻辑，不应该进行数据库访问。因此，业务逻辑组件中不应该出现原始的MyBatis、Hibernate和JDBC等API。<span style=\"color:#5073b8;\">最重要的原因是：保证业务逻辑方法的实现与具体的持久层访问技术分离。当系统需要在不同持久层技术之间切换时，系统的业务逻辑组件无序任何改变。</span></li>\n<li><strong>DAO组件</strong>。这个类型的对象比较缺乏变化，每个DAO组件都提供Domain Object对象基本的创建、查询、更新和删除等操作，这些操作对应于数据库的CRUD（创建、查询、更新和删除）等原子操作。当然，如果采用不同的持久层访问技术，DAO组件的会完全不同。为了实现业务逻辑组件的实现与DAO组件的实现分离，程序应该为每个DAO组件都提供接口，业务逻辑组件面向DAO接口编程，这样才能提供更好的解耦。</li>\n<li><strong>领域对象组件</strong>。领域对象（Doamin Object）抽象了系统的对象模型。通常而言，这些领域对象的状态都必须保存在数据库里。因此，每个领域对象通常对应一个或多个数据表，领域对象通常需要提供对数据记录的访问方式。</li>\n</ul>\n<h2 id=\"最流行的NoSQL-–-Redis\"><a href=\"#最流行的NoSQL-–-Redis\" class=\"headerlink\" title=\"最流行的NoSQL – Redis\"></a>最流行的NoSQL – Redis</h2><p>NoSQL(Not Only SQL)存储的数据是半结构化的，Redis成为主要的NoSQL工具。</p>\n<ol>\n<li>响应速度快。</li>\n<li>支持6种数据类型：字符串、哈希结构、列表、集合、可排序集合和基数。比如字符串可以存储Java基础数据类型，哈希可以存储对象，列表可以存储List对象等。</li>\n<li>操作都是原子的。</li>\n<li>MultiUtility工具：Redis可以再如缓存、、消息传递队列中使用（Reids支持“发布+订阅”的消息模式），在应用程序如Web应用程序绘画、网站页面点击数等任何短暂的数据中使用。</li>\n</ol>\n<h2 id=\"SSM-Redis结构框图及概述\"><a href=\"#SSM-Redis结构框图及概述\" class=\"headerlink\" title=\"SSM+Redis结构框图及概述\"></a>SSM+Redis结构框图及概述</h2><p>在Java Web中，以Spring + Spring MVC + MyBatis（SSM）作为主流框架，SSM+Redis的结构框图如下：<br><img src=\"/images/JavaEE/SSM-Redis-architecture.png\" alt=\"SSM+Redis结构示意图\"></p>\n<ul>\n<li>Spring IoC承担了一个资源管理、整合、即插即拔的功能。</li>\n<li>Spring AOP可以提供切面管理，特别是书U哭事务管理的功能。</li>\n<li>Spring MVC用于把模型、视图和控制器分层，组合成了一个有机灵活的系统。</li>\n<li>MyBatis提供了一个数据库访问的持久层，通过MyBatis-Spring项目，它便能和Spring无缝对接。</li>\n<li>Redis作为缓存工具，它提供了高速度处理数据和缓存数据的功能，使得系统大部分只需要访问缓存，而无须从数据库磁盘中重复读/写；在一些需要高速运算的场合中，也可以先用它来完成运算，再把数据批量存入数据库，这样便能极大地提升互联网系统的性能和响应能力。</li>\n</ul>\n<p>在后面会讲解这些技术的使用方法、原理和优化方法。</p>\n<hr>","site":{"data":{}},"excerpt":"<p class=\"description\">文章对以下要点进行总结和归纳：1)了解Spring IoC和Spring AOP的基础概念；2)了解MyBatis的特点；3)了解Spring MVC的特点；4)了解为什么要使用NoSQL(Redis)及Redis的优点；5)掌握SSM和Redis的基本结构框图和各种技术的作用。</p>","more":"<h2 id=\"Spring框架\"><a href=\"#Spring框架\" class=\"headerlink\" title=\"Spring框架\"></a>Spring框架</h2><p>Spring框架是Java应用最广的框架，它优秀的理念包括 <strong>IoC</strong> (Inversion of Control， 控制反转)和 <strong>AOP</strong> (Aspect Oriented Programming， 面向切面编程)。</p>\n<h3 id=\"Spring-IoC简介\"><a href=\"#Spring-IoC简介\" class=\"headerlink\" title=\"Spring IoC简介\"></a>Spring IoC简介</h3><p>Spring IoC（Inversion of Control，控制反转）承担了一个资源管理、整合、即插即拔的功能。举个例子，在Java中我们为国家插座设计两种接口，那我们就可以为两种插座分别new两个对象，但是如果要更改上千次这种插座，难道要new很多对象吗？所以不用new的方式创建对象，而是使用配置的方式，然后使用配置的方式，然后让Spring IoC容器自己通过配置去找到插座。<br>不需要去找资源(Bean)，只要向Spring IoC容器描述所需资源，Spring IoC自己会找到你所需要的资源，这就是Spring IoC的理念。这样就把Bean之间的依赖关系解耦了，更容易写出结构清晰的程序。除此之外，Spring IoC还提供对Java Bean生命周期的管理，可以延迟加载，可以在其生命周期内定义一些行为等，更加有效地使用和管理Java资源。<br>如果使用new的方式来使用插座，代码如下。<br><figure class=\"highlight java\"><figcaption><span>使用插座1</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">User user = <span class=\"keyword\">new</span> User();</span><br><span class=\"line\">Socket socket = <span class=\"keyword\">new</span> Socket1();</span><br><span class=\"line\">user.setSocket(socket);</span><br><span class=\"line\">user.useSocket();</span><br></pre></td></tr></table></figure></p>\n<p>这样会有一个弊端，如果使用其他插座，就需要修改代码。可以使用配置的方式代替new的方式创建对象，让Spring IoC容器通过配置去找到插座。<br><figure class=\"highlight xml\"><figcaption><span>使用Spring IoC注入插座1个用户</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"socket\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"Socket1\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"user\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"xxx.User\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">spanroperty</span> <span class=\"attr\">name</span>=<span class=\"string\">\"socket\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"socket\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>只需要修改XML配置文件，就可以切换：<br><figure class=\"highlight diff\"><figcaption><span>切换插座的实现类</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"deletion\">- &lt;bean id=\"socket\" class=\"Socket1\" /&gt;</span></span><br><span class=\"line\"><span class=\"addition\">+ &lt;bean id=\"socket\" class=\"Socket2\" /&gt;</span></span><br><span class=\"line\">&lt;bean id=\"user\" class=\"xxx.User\"&gt;</span><br><span class=\"line\">    &lt;spanroperty name=\"socket\" ref=\"socket\" /&gt;</span><br><span class=\"line\">&lt;/bean&gt;</span><br></pre></td></tr></table></figure></p>\n<p>显然，IoC的目标就是为了管理Bean而存在的。</p>\n<h3 id=\"Spring-AOP\"><a href=\"#Spring-AOP\" class=\"headerlink\" title=\"Spring AOP\"></a>Spring AOP</h3><p>IoC的目标就是为了管理Bean，而Bean是Java面向对象(OOP)的基础设计，比如声明一个用户类、插座类等都是基于面向对象的概念。<br>有些情况是面向对象没办法处理的。<br>举个例子，生产部门的订单、生产部门、财务部门三者符合OOP的设计理念。订单发出，生产部门审批通过准备付款，但是财务部门发现订单的价格超支了，需要取消订单。 显然超支限定已经不只是影响财务部门了，还会影响生产部门之前所做的审批，需要把它们作废。把预算超支这个条件称为切面，它影响了订单、生产部门和财务部门3个OOP对象。在现实中，这样的切面条件跨越了3个甚至更多的对象，并且影响了它们的协作。所以只用OOP并不完善，还需要面向切面的编程，通过它去管理在切面上的某些对象之间的协作。<br>Spring AOP常用于数据库事务的编程，很多情况都如同上而的例子，我们在做完第一步数据库数据更新后，不知道下一步是否会成功，如果下一步失收，会使用数据库事务的回滚功能去回滚事务，使得第一步的数据库更新也作废。<br>在Spring AOP实现的数据库事务管理中，是以异常作为消息的。在默认的情况下(可以通过Spring的配置修改)，只要Spring接收到了异常信息，它就会将数据库的事务回滚，从而保证数据的一致性。这样我们就知道在Spring的事务管理中只要让它接收到异常信息，它就会回滚事务，而不需要通过代码来实现这个过程。<br>比如上面的例子，可用一段伪代码来进行一些必要的说明。<br><figure class=\"highlight java\"><figcaption><span>Spring AOP处理订单伪代码</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">proceed</span><span class=\"params\">(Order order)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//判断生产部门是否通过订单，数据库记录订单</span></span><br><span class=\"line\">    <span class=\"keyword\">boolean</span> pflag = productionDept.isPass(order);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(pflag) &#123;<span class=\"comment\">//如果生产部门通过进行财务部门审批</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (financialDept.isOverBudget(order)) &#123;<span class=\"comment\">//财务审批是否超限</span></span><br><span class=\"line\">            <span class=\"comment\">//抛出异常回滚事务，之前的订单操作也会被回滚</span></span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">\"预算超限！！\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>Spring AOP的编程屏蔽了数据库代码，只需关注业务代码，知道只要发生了一场异常，Spring会回滚事务就足够了。</p>\n<h2 id=\"MyBatis简介\"><a href=\"#MyBatis简介\" class=\"headerlink\" title=\"MyBatis简介\"></a>MyBatis简介</h2><p>MyBatis的前身是Apache的开源项目iBatis，是一个基于 Java的持久层框架。2010年这个项目由Apache software foundation迁移到Google code，并更名为MyBatis。2013年11月，MyBatis迁移到GitHub上，目前由GitHub提供维护。<br>MyBatis的优势在于灵活，它几乎可以代替JDBC，同时提供了接口编程。目前MyBatis的数据访问层 DAO(Data Access Objects)是不需要实现类的，它只需要一个接口和XML(或者注解)。MyBatis提供自动映射、动态SQL、级联、缓存、注解、代码和SQL分离等特性，使用方便，同时也可以对SQL进行优化。因为其具有封装少、映射多样化、支持存储过程、可以进行SQL优化等特点，使得它取代了Hibernate成为了Java互联网中首选的持久框架。<br>Hibernate作为一种十分流行的框架，它有其无可替代的优势，这里我们有必要讨论一下它和MyBatis的区别。由于MyBatis和Hibernate都是持久层框架，都会涉及数据库，所以首先定义一个数据库表一角色表(t_role)。<br><figure class=\"highlight sql\"><figcaption><span>角色表的sql语句</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_role(</span><br><span class=\"line\">    编号 <span class=\"built_in\">int</span>(<span class=\"number\">12</span>) primary <span class=\"keyword\">key</span>，</span><br><span class=\"line\">    角色名称 <span class=\"built_in\">varchar</span>(<span class=\"number\">60</span>)，</span><br><span class=\"line\">    备注 <span class=\"built_in\">varchar</span>(<span class=\"number\">1024</span>)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure></p>\n<p>用一个POJO(Plain Ordinary Java Object)和这张表定义的字段对应起来。<br><figure class=\"highlight java\"><figcaption><span>定义角色POJO</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.learn.chapter1.pojo;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Role</span> <span class=\"keyword\">implements</span> <span class=\"title\">java</span>.<span class=\"title\">io</span>.<span class=\"title\">Serializable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String roleName;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String note;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * setter and getter</span></span><br><span class=\"line\"><span class=\"comment\">    **/</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>无论是MyBatis还是Hibernate都是依靠某种方法，将数据库的表和POJO映射起来的，这样就可以操作POJO来完成相关的逻辑了。</p>\n<h3 id=\"Hibernate简介\"><a href=\"#Hibernate简介\" class=\"headerlink\" title=\"Hibernate简介\"></a>Hibernate简介</h3><p>映射规则</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">语言</th>\n<th style=\"text-align:left\">映射方法</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">MyBatis</td>\n<td style=\"text-align:left\">使用注解方式会受到一定的限制，通常使用XML方式实现映射关系</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Hibernate</td>\n<td style=\"text-align:left\">XML和注解提供映射规则</td>\n</tr>\n</tbody>\n</table>\n<p>把POJO对象和数据库表相互映射的框架称为对象关系映射(Object Relational Mapping，ORM，或O/RM，或O/R mapping)框架。Hibernate的设计理念是完全面向POJO的，不需要编写SQL就可以通过映射关系来操作数据库，是一种全表映射的体现；MyBatis需要提供SQL去运行。<br><figure class=\"highlight xml\"><figcaption><span>Hibernate映射文件</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE hibernate-mapping PUBLIC \"-//Hibernate/Hibernate Mapping DTD 3.0//EN\"</span></span><br><span class=\"line\"><span class=\"meta\">  \"http://www.hibernate.rg/dtd/hibernate-mapping-3.0.dtd\"&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">hibernate-mapping</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">class</span> <span class=\"attr\">name</span>=<span class=\"string\">\"com.learn.chapter1.pojo.Role\"</span> <span class=\"attr\">tbale</span>=<span class=\"string\">\"t_role\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">name</span>=<span class=\"string\">\"id\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"java.lang.Integer\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">column</span> <span class=\"attr\">name</span>=<span class=\"string\">\"id\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">generator</span> <span class=\"attr\">class</span>=<span class=\"string\">\"identity\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">spanroperty</span> <span class=\"attr\">name</span>=<span class=\"string\">\"roleName\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"string\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">column</span> <span class=\"attr\">name</span>=<span class=\"string\">\"role_name\"</span> <span class=\"attr\">length</span>=<span class=\"string\">\"60\"</span> <span class=\"attr\">not-null</span>=<span class=\"string\">\"true\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">spanroperty</span> <span class=\"attr\">name</span>=<span class=\"string\">\"note\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"string\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">column</span> <span class=\"attr\">name</span>=<span class=\"string\">\"note\"</span> <span class=\"attr\">length</span>=<span class=\"string\">\"512\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">class</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>首先，对POJO和表t_role进行了映射配置，把两者映射起来了。然后，对POJO进行操作，从而影响t_role表的数据，比如对其增删改查可以按照如下操作。<br><figure class=\"highlight java\"><figcaption><span>Hibernate通过Session操作数据库数据</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Session session = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">Transaction tx = <span class=\"keyword\">null</span>;        </span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//打开Session</span></span><br><span class=\"line\">    session = HibernateUtil.getSessionFactory().openSession();</span><br><span class=\"line\">    <span class=\"comment\">//事务</span></span><br><span class=\"line\">    tx = session.beginTransaction();</span><br><span class=\"line\">    <span class=\"comment\">//POJO</span></span><br><span class=\"line\">    Role role = <span class=\"keyword\">new</span> Role();</span><br><span class=\"line\">    role.setId(<span class=\"number\">1</span>);</span><br><span class=\"line\">    role.setRoleName(<span class=\"string\">\"rolename1\"</span>);</span><br><span class=\"line\">    role.setNote(<span class=\"string\">\"note1\"</span>);  <span class=\"comment\">//保存</span></span><br><span class=\"line\">    Role role2 = (Role) session.get(Role.class， <span class=\"number\">1</span>); <span class=\"comment\">//查询</span></span><br><span class=\"line\">    role2.setNote(<span class=\"string\">\"修改备注\"</span>);</span><br><span class=\"line\">    session.update(role2); <span class=\"comment\">//更新</span></span><br><span class=\"line\">    System.err.println(role2.getRoleName());</span><br><span class=\"line\">    session.delete(role2); <span class=\"comment\">//删除</span></span><br><span class=\"line\">    tx.commit(); <span class=\"comment\">//提交事务</span></span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"keyword\">catch</span> (Exception ex) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (tx != <span class=\"keyword\">null</span> &amp;&amp; tx.isActive()) &#123;</span><br><span class=\"line\">        tx.rollback(); <span class=\"comment\">//回滚事务</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ex.printStackTrace();</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (session != <span class=\"keyword\">null</span> &amp;&amp; session.isOpen()) &#123;</span><br><span class=\"line\">        session.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这里没有SQL，因为Hibernate会根据映射关系来生成对应的SQL。</p>\n<h3 id=\"MyBatis\"><a href=\"#MyBatis\" class=\"headerlink\" title=\"MyBatis\"></a>MyBatis</h3><p>可以自己拟定SQL规则，能精确定义SQL，从而符合移动互联网高并发、大数据、高性能、高响应的需求。MyBatis也需要映射文件把POJO和数据库的表对应起来。<br><figure class=\"highlight xml\"><figcaption><span>MyBatis映射文件</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE mapper   PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"</span></span><br><span class=\"line\"><span class=\"meta\">  \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">\"com.learn.chapter1.mapper.RoleMapper\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">id</span>=<span class=\"string\">\"roleMap\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"com.learn.chaper1.pojo.Role\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">property</span>=<span class=\"string\">\"id\"</span> <span class=\"attr\">column</span>=<span class=\"string\">\"id\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">\"roleName\"</span> <span class=\"attr\">column</span>=<span class=\"string\">\"role_name\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">\"note\"</span> <span class=\"attr\">column</span>=<span class=\"string\">\"note\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"getRole\"</span> <span class=\"attr\">resultMap</span>=<span class=\"string\">\"roleMap\"</span>&gt;</span></span><br><span class=\"line\">        select id， role_name， note from t_rle where id = #&#123;id&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">delete</span> <span class=\"attr\">id</span>=<span class=\"string\">\"deleteRole\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"int\"</span>&gt;</span></span><br><span class=\"line\">        delete from t_role where id = #&#123;id&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">delete</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">insert</span> <span class=\"attr\">id</span>=<span class=\"string\">\"insertRole\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"com.learn.chapter1.pojo.Role\"</span>&gt;</span></span><br><span class=\"line\">        insert into t_role(role_name， note) values(#&#123;roleName&#125;， #&#123;note&#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">insert</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">update</span> <span class=\"attr\">id</span>=<span class=\"string\">\"updateRole\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"com.learn.chapter1.pojo.Role\"</span>&gt;</span></span><br><span class=\"line\">        update t_role set</span><br><span class=\"line\">        role_name = #&#123;roleName&#125;，</span><br><span class=\"line\">        note = #&#123;note&#125;</span><br><span class=\"line\">        where id = #&#123;id&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">update</span>&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>这里的resultMap元素用于定义映射规则，而实际上MyBatis在满足一定的规则下，完成自动映射，而增删改查对应着insert、delete、select、update四个元素。mapper元素中的namespace属性，要和一个接口的全限定名保持一致，而里面的SQL的id也需要和接口定义的方法完全保持一致，定义MyBatis映射文件。<br><figure class=\"highlight java\"><figcaption><span>定义MyBatis映射文件</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.learn.chapter1.mapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.learn.chapter1.pojo.Role;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">RoleMapper</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Role <span class=\"title\">getRole</span><span class=\"params\">(Integer id)</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">deleteRole</span><span class=\"params\">(Integer id)</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">insertROle</span><span class=\"params\">(Role role)</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">updateROle</span><span class=\"params\">(Role role)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>定义了MyBatis映射文件，不需要定义一个实现类。<br><span style=\"color:#5073b8;\">显然MyBatis在业务逻辑上和Hibernate是大同小异的。其区别在于，MyBatis需要提供接口和SQL，这意味着工作量会比较大，但是由于自定义SQL、映射关系，所以灵活性、可优化性超过了Hibernate。互联网可优化性、灵活性是十分重要的，因为一条SQL的性能可能相差十几倍到几十倍。</span></p>\n<h3 id=\"Hibernate和MyBatis的区别\"><a href=\"#Hibernate和MyBatis的区别\" class=\"headerlink\" title=\"Hibernate和MyBatis的区别\"></a>Hibernate和MyBatis的区别</h3><p>Hibernate和MyBatis的增、删、改、查，对于业务逻辑层来说大同小异，对于映射层而言Hibernate的配置不需要接口和SQL，相反MyBatis是需要的。对于Hibernate而言，不需要编写大量的SQL，就可以完全映射，同时提供了日志、缓存、级联(级联比MyBatis强大)等特性，此外还提供HQL( Hibernate Query Language)对POJO进行操作，使用十分方便，但是它也有致命的缺陷。<br>由于无须SQL，当多表关联超过3个的时候，通过Hibernate的级联会造成太多性能的丢失，又或者我现在访问一个财务的表，然后它会关联财产信息表，财产又分为机械、原料等，显然机械和原料的字段是不一样的，这样关联字段只能根据特定的条件变化而变化而Hibernate无法支持这样的变化。遇到存储过程，Hibernate只能作罢。更为关键的是性能，在管理系统的时代，对于性能的要求不是那么苛刻，但是在互联网时代性能就是系统的根本，响应过慢就会丧失客户，试想一下谁会去用一个经常需要等待超过10秒以上的应用呢?<br>以上的问题MyBatis都可以解决，MyBatis可以自由书写SQL、支持动态SQL、处理列表、动态生成表名、支持存储过程。这样就可以灵活地定义查询语句，满足各类需求和性能优化的需要，这些在互联网系统中是十分重要的。<br>但MyBatis也有缺陷。首先，它要编写SQL和映射规则，其工作量稍微大于Hibernate。 其次，它支持的工具也很有限，不能像Hibernate那样有许多的插件可以帮助生成映射代码和关联关系，而即使使用生成工具，往往也需要开发者进一步简化，MyBatis通过手工编码，工作量相对大些。所以对于性能要求不太苛刻的系统，比如管理系统、ERP等推荐使用Hibernate;而对于性能要求高、响应快、灵活的系统则推荐使用MyBatis。</p>\n<h2 id=\"Spring-MVC简介\"><a href=\"#Spring-MVC简介\" class=\"headerlink\" title=\"Spring MVC简介\"></a>Spring MVC简介</h2><p>也许你还在问为什么使用Spring MVC，Struts 2.x不才是主流吗？看SSH的概念多火!其实很多初学者都混淆了一个概念，SSH时间上指的是Struts 1.x + Spring + Hibernate，这个概念已经有十几年的历史了。在Structs 1.x的时代，Structs1.x是当之无愧的MVC框架的霸主，但是在新的MVC框架涌现的时代，形式已经完全不是这样的了，Structs 2.x借助了Structs 1.x的好名声，让国内开发者认为Structs 2.x是霸主继任者（其实两者在技术上没有任何关系），导致国内的很多程序员大多数学习基于Structs 2.x的框架，有一个貌似很火的概念出来了S2SH(Struts 2.x + Spring + Hibernate)整合开发。<br>根据JRebel厂商统计，Spring MVC的市场占有率是40%，而Structs 2.x只有可怜的6%。<span style=\"color:#5073b8;\">Spring MVC是目前Java Web框架当之无愧的霸主。</span><br>Spring MVC和三层架构是什么关系，可能很多读者会抢答：<br>MVC：Model + View + Controller (数据模型+视图+控制器)<br>三层架构：Prensentation tier + Application tier + Data tier（展现层+应用层+数据访问层）<br>那MVC和三层架构有什么关系呢？但是实际上MVC只存在三层架构的展现层，M实际上是数据模型，是包含数据的对象。在Spring MVC里，有一个专门的类叫Model，用来和V之间的数据交互、传值；V指的是视图页面，包含JSP、freeMarker、Velocity、Thymeleaf、Tile等；C当然就是控制器（Spring MVC的注解@Controller的类）。<br>而三层架构是整个应用的架构，是由Spring框架负责管理的。一般项目中会有Service层、DAO层，这两个反馈在应用层和数据访问层。</p>\n<h3 id=\"Java-EE应用的分层模型\"><a href=\"#Java-EE应用的分层模型\" class=\"headerlink\" title=\"Java EE应用的分层模型\"></a>Java EE应用的分层模型</h3><p>经典的Java EE架构大致上都可以分为如下几层：</p>\n<ul>\n<li><strong>Domain Object(领域对象)层</strong>。此层有一系列的POJO(Plain Object Java Object，普通的传统的Java对象)组成，这些对象是该系统的Domain Object(领域对象)，往往包含了各自所需实现的业务逻辑方法。</li>\n<li><strong>DAO(Data Access Object，数据访问对象)层</strong>。此层由一系列的DAO组件组成，这些DAO实现了对数据库的创建、查询、更新和删除（CRUD）等原子操作。</li>\n<li><strong>Service(业务逻辑)层</strong>。此层由一系列的业务逻辑对象组成，这些业务逻辑对象实现了系统所需的业务逻辑方法。这些业务逻辑方法可能仅仅用于暴露Domain Object对象所实现的业务逻辑方法，也可能是依赖DAO组件实现的业务逻辑方法。</li>\n<li><strong>Controller(控制器)层</strong>。此层由一系列控制器组成，这些控制器用于拦截用户请求，并调用业务逻辑组件的业务逻辑方法，处理用户请求，并根据处理结果向不同的表现层组件转发。</li>\n<li><strong>View(表现)层</strong>。此层由一系列的JSP页面、Velocity页面、PDF文档视图组件组成，负责手机用户请求，并显示处理结果。<h3 id=\"Java-EE应用的组件\"><a href=\"#Java-EE应用的组件\" class=\"headerlink\" title=\"Java EE应用的组件\"></a>Java EE应用的组件</h3>总体而言，Java EE应用应该大致包括如下几类组件：</li>\n<li><strong>表现层组件</strong>。主要负责收集用户输入数据，或者想客户显示系统状态。最常用的表现层技术是JSP，但JSP并不是唯一的表现层技术。表现层还可以由Velocity、FreeMarker和Tapestry等技术完成，或者使用普通的应用程序充当表现层组件，甚至可以是小型智能设备。</li>\n<li><strong>控制器组件</strong>。关于Java EE的MVC框架，其提供了一个前端核心控制器，核心控制器负责拦截用户请求，并将请求转发给用户实现的控制器组件。这些用户实现的控制器组件则负责调用业务逻辑方法，处理用户请求。</li>\n<li><strong>业务逻辑组件</strong>。这是系统的核心组件，实现系统的业务逻辑。通常，一个业务逻辑方法对应一次用户操作。一个业务逻辑方法应该是一个整体，因此要求对业务逻辑方法增加事务性。业务逻辑方法仅仅实现也呜呜逻辑，不应该进行数据库访问。因此，业务逻辑组件中不应该出现原始的MyBatis、Hibernate和JDBC等API。<span style=\"color:#5073b8;\">最重要的原因是：保证业务逻辑方法的实现与具体的持久层访问技术分离。当系统需要在不同持久层技术之间切换时，系统的业务逻辑组件无序任何改变。</span></li>\n<li><strong>DAO组件</strong>。这个类型的对象比较缺乏变化，每个DAO组件都提供Domain Object对象基本的创建、查询、更新和删除等操作，这些操作对应于数据库的CRUD（创建、查询、更新和删除）等原子操作。当然，如果采用不同的持久层访问技术，DAO组件的会完全不同。为了实现业务逻辑组件的实现与DAO组件的实现分离，程序应该为每个DAO组件都提供接口，业务逻辑组件面向DAO接口编程，这样才能提供更好的解耦。</li>\n<li><strong>领域对象组件</strong>。领域对象（Doamin Object）抽象了系统的对象模型。通常而言，这些领域对象的状态都必须保存在数据库里。因此，每个领域对象通常对应一个或多个数据表，领域对象通常需要提供对数据记录的访问方式。</li>\n</ul>\n<h2 id=\"最流行的NoSQL-–-Redis\"><a href=\"#最流行的NoSQL-–-Redis\" class=\"headerlink\" title=\"最流行的NoSQL – Redis\"></a>最流行的NoSQL – Redis</h2><p>NoSQL(Not Only SQL)存储的数据是半结构化的，Redis成为主要的NoSQL工具。</p>\n<ol>\n<li>响应速度快。</li>\n<li>支持6种数据类型：字符串、哈希结构、列表、集合、可排序集合和基数。比如字符串可以存储Java基础数据类型，哈希可以存储对象，列表可以存储List对象等。</li>\n<li>操作都是原子的。</li>\n<li>MultiUtility工具：Redis可以再如缓存、、消息传递队列中使用（Reids支持“发布+订阅”的消息模式），在应用程序如Web应用程序绘画、网站页面点击数等任何短暂的数据中使用。</li>\n</ol>\n<h2 id=\"SSM-Redis结构框图及概述\"><a href=\"#SSM-Redis结构框图及概述\" class=\"headerlink\" title=\"SSM+Redis结构框图及概述\"></a>SSM+Redis结构框图及概述</h2><p>在Java Web中，以Spring + Spring MVC + MyBatis（SSM）作为主流框架，SSM+Redis的结构框图如下：<br><img src=\"/images/JavaEE/SSM-Redis-architecture.png\" alt=\"SSM+Redis结构示意图\"></p>\n<ul>\n<li>Spring IoC承担了一个资源管理、整合、即插即拔的功能。</li>\n<li>Spring AOP可以提供切面管理，特别是书U哭事务管理的功能。</li>\n<li>Spring MVC用于把模型、视图和控制器分层，组合成了一个有机灵活的系统。</li>\n<li>MyBatis提供了一个数据库访问的持久层，通过MyBatis-Spring项目，它便能和Spring无缝对接。</li>\n<li>Redis作为缓存工具，它提供了高速度处理数据和缓存数据的功能，使得系统大部分只需要访问缓存，而无须从数据库磁盘中重复读/写；在一些需要高速运算的场合中，也可以先用它来完成运算，再把数据批量存入数据库，这样便能极大地提升互联网系统的性能和响应能力。</li>\n</ul>\n<p>在后面会讲解这些技术的使用方法、原理和优化方法。</p>\n<hr>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjsyi57zp0001rcvi5r2ktpr7","category_id":"cjsyi57zu0002rcviq5t89uze","_id":"cjsyi57zy0005rcviazm3woty"},{"post_id":"cjsyi58110006rcvi1awrqgc3","category_id":"cjsyi57zu0002rcviq5t89uze","_id":"cjsyi58130008rcviatu2usyt"},{"post_id":"cjsyi582m0009rcvizvei0bjm","category_id":"cjsyi582p000arcviw1b724p6","_id":"cjsyi582q000drcviuyef32fy"}],"PostTag":[{"post_id":"cjsyi57zp0001rcvi5r2ktpr7","tag_id":"cjsyi57zw0003rcvizth7dusv","_id":"cjsyi57zy0004rcvi1qwgp6sv"},{"post_id":"cjsyi58110006rcvi1awrqgc3","tag_id":"cjsyi57zw0003rcvizth7dusv","_id":"cjsyi58120007rcviz28mkdik"},{"post_id":"cjsyi582m0009rcvizvei0bjm","tag_id":"cjsyi582p000brcvii2gi78lu","_id":"cjsyi582q000crcviwsue6b6t"}],"Tag":[{"name":"得到，职场写作，软技能","_id":"cjsyi57zw0003rcvizth7dusv"},{"name":"Spring， Spring MVC， MyBatis， Redis","_id":"cjsyi582p000brcvii2gi78lu"}]}}